Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> KOTOBA ID func_start ENDSTMT declare startaux BEGIN func_begin_main block END
Rule 2     start -> KOTOBA ID func_start ENDSTMT startaux BEGIN func_begin_main block END
Rule 3     startaux -> function startaux
Rule 4     startaux -> empty
Rule 5     block -> OPENCURL blockaux CLOSECURL
Rule 6     blockaux -> action blockaux
Rule 7     blockaux -> empty
Rule 8     action -> input
Rule 9     action -> output
Rule 10    action -> statement
Rule 11    input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT
Rule 12    output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
Rule 13    outputaux -> expression func_print
Rule 14    outputaux -> expression func_print COMA outputaux
Rule 15    declare -> DEC decaux
Rule 16    decaux -> type ID func_declare_var declareaux
Rule 17    decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux
Rule 18    declareaux -> ENDSTMT
Rule 19    declareaux -> COMA decaux
Rule 20    assign -> ID func_constantID EQUAL func_assign assignaux
Rule 21    assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux
Rule 22    assignaux -> exp ENDSTMT
Rule 23    assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT
Rule 24    assiaux -> exp
Rule 25    assiaux -> exp COMA assiaux
Rule 26    cte -> ID func_constantID
Rule 27    cte -> BOOLCTE func_constant func_boolCte
Rule 28    cte -> NUMBERCTE func_constant func_numberCte
Rule 29    cte -> WORDCTE func_constant func_wordCte
Rule 30    cte -> SENTENCECTE func_constant func_sentenceCte
Rule 31    type -> BOOL func_type
Rule 32    type -> NUMBER func_type
Rule 33    type -> WORD func_type
Rule 34    type -> SENTENCE func_type
Rule 35    statement -> assign
Rule 36    statement -> expression
Rule 37    statement -> condition
Rule 38    statement -> cycle
Rule 39    statement -> specialfunction
Rule 40    expression -> relopexpression
Rule 41    expression -> relopexpression AND expression
Rule 42    expression -> relopexpression OR expression
Rule 43    relopexpression -> exp
Rule 44    relopexpression -> exp RELOP exp
Rule 45    relopexpression -> NOT exp
Rule 46    exp -> term
Rule 47    exp -> term PLUS exp
Rule 48    exp -> term MINUS exp
Rule 49    term -> factor
Rule 50    term -> factor MULT term
Rule 51    term -> factor DIV term
Rule 52    factor -> OPENPAREN expression CLOSEPAREN
Rule 53    factor -> cte
Rule 54    condition -> IF OPENPAREN expression CLOSEPAREN block
Rule 55    condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block
Rule 56    cycle -> WHILE OPENPAREN expression CLOSEPAREN block
Rule 57    cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
Rule 58    function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
Rule 59    function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
Rule 60    funcaux -> type
Rule 61    funcaux -> VOID
Rule 62    parameter -> type ID func_declare_var parameteraux
Rule 63    parameter -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array parameteraux
Rule 64    parameteraux -> COMA parameter
Rule 65    parameteraux -> empty
Rule 66    returnaux -> RETURN ID
Rule 67    returnaux -> empty
Rule 68    specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
Rule 69    spaux -> cte
Rule 70    spaux -> empty
Rule 71    special -> LENGTH
Rule 72    special -> FREQUENCY
Rule 73    special -> SEARCH
Rule 74    special -> EXISTS
Rule 75    special -> MEAN
Rule 76    special -> MEDIAN
Rule 77    special -> MODE
Rule 78    special -> WORDCOUNT
Rule 79    special -> TOKENIZE
Rule 80    special -> REMOVE
Rule 81    empty -> <empty>
Rule 82    func_start -> <empty>
Rule 83    func_declare_var -> <empty>
Rule 84    func_declare_array -> <empty>
Rule 85    func_isSize -> <empty>
Rule 86    func_declare_function -> <empty>
Rule 87    func_type -> <empty>
Rule 88    func_constant -> <empty>
Rule 89    func_constantID -> <empty>
Rule 90    func_boolCte -> <empty>
Rule 91    func_numberCte -> <empty>
Rule 92    func_wordCte -> <empty>
Rule 93    func_sentenceCte -> <empty>
Rule 94    func_begin_main -> <empty>
Rule 95    func_read -> <empty>
Rule 96    func_print -> <empty>
Rule 97    func_assign -> <empty>

Terminals, with rules where they appear

AND                  : 41
BEGIN                : 1 2
BOOL                 : 31
BOOLCTE              : 27
CLOSEBRAC            : 17 21 63
CLOSECURL            : 5 23 58 59
CLOSEPAREN           : 11 12 52 54 55 56 57 58 59 68
COMA                 : 14 19 25 64
DEC                  : 15
DIV                  : 51
DO                   : 57
DOT                  : 68
ELSE                 : 55
END                  : 1 2
ENDSTMT              : 1 2 11 12 18 22 23 57 58 59 68
EQUAL                : 20 21
EXISTS               : 74
FREQUENCY            : 72
FUNC                 : 58 59
ID                   : 1 2 11 16 17 20 21 26 58 59 62 63 66 68
IF                   : 54 55
KOTOBA               : 1 2
LENGTH               : 71
MEAN                 : 75
MEDIAN               : 76
MINUS                : 48
MODE                 : 77
MULT                 : 50
NOT                  : 45
NUMBER               : 32
NUMBERCTE            : 28
OPENBRAC             : 17 21 63
OPENCURL             : 5 23 58 59
OPENPAREN            : 11 12 52 54 55 56 57 58 59 68
OR                   : 42
PLUS                 : 47
READ                 : 11
RELOP                : 44
REMOVE               : 80
RETURN               : 66
SEARCH               : 73
SENTENCE             : 34
SENTENCECTE          : 30
TOKENIZE             : 79
VOID                 : 61
WHILE                : 56 57
WORD                 : 33
WORDCOUNT            : 78
WORDCTE              : 29
WRITE                : 12
error                : 

Nonterminals, with rules where they appear

action               : 6
assiaux              : 23 25
assign               : 35
assignaux            : 20 21
block                : 1 2 54 55 55 56 57
blockaux             : 5 6 58 59
condition            : 37
cte                  : 17 21 53 63 69
cycle                : 38
decaux               : 15 19
declare              : 1 58
declareaux           : 16 17
empty                : 4 7 65 67 70
exp                  : 22 24 25 43 44 44 45 47 48
expression           : 13 14 36 41 42 52 54 55 56 57
factor               : 49 50 51
func_assign          : 20 21
func_begin_main      : 1 2
func_boolCte         : 27
func_constant        : 27 28 29 30
func_constantID      : 20 21 26
func_declare_array   : 17 63
func_declare_function : 58 59
func_declare_var     : 16 62
func_isSize          : 17 21 63
func_numberCte       : 28
func_print           : 13 14
func_read            : 11
func_sentenceCte     : 30
func_start           : 1 2
func_type            : 31 32 33 34
func_wordCte         : 29
funcaux              : 58 59
function             : 3
input                : 8
output               : 9
outputaux            : 12 14
parameter            : 58 59 64
parameteraux         : 62 63
relopexpression      : 40 41 42
returnaux            : 58 59
spaux                : 68
special              : 68
specialfunction      : 39
start                : 0
startaux             : 1 2 3
statement            : 10
term                 : 46 47 48 50 51
type                 : 16 17 60 62 63

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . KOTOBA ID func_start ENDSTMT declare startaux BEGIN func_begin_main block END
    (2) start -> . KOTOBA ID func_start ENDSTMT startaux BEGIN func_begin_main block END

    KOTOBA          shift and go to state 1

    start                          shift and go to state 2

state 1

    (1) start -> KOTOBA . ID func_start ENDSTMT declare startaux BEGIN func_begin_main block END
    (2) start -> KOTOBA . ID func_start ENDSTMT startaux BEGIN func_begin_main block END

    ID              shift and go to state 3


state 2

    (0) S' -> start .



state 3

    (1) start -> KOTOBA ID . func_start ENDSTMT declare startaux BEGIN func_begin_main block END
    (2) start -> KOTOBA ID . func_start ENDSTMT startaux BEGIN func_begin_main block END
    (82) func_start -> .

    ENDSTMT         reduce using rule 82 (func_start -> .)

    func_start                     shift and go to state 4

state 4

    (1) start -> KOTOBA ID func_start . ENDSTMT declare startaux BEGIN func_begin_main block END
    (2) start -> KOTOBA ID func_start . ENDSTMT startaux BEGIN func_begin_main block END

    ENDSTMT         shift and go to state 5


state 5

    (1) start -> KOTOBA ID func_start ENDSTMT . declare startaux BEGIN func_begin_main block END
    (2) start -> KOTOBA ID func_start ENDSTMT . startaux BEGIN func_begin_main block END
    (15) declare -> . DEC decaux
    (3) startaux -> . function startaux
    (4) startaux -> . empty
    (58) function -> . FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> . FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (81) empty -> .

    DEC             shift and go to state 6
    FUNC            shift and go to state 10
    BEGIN           reduce using rule 81 (empty -> .)

    function                       shift and go to state 9
    empty                          shift and go to state 8
    startaux                       shift and go to state 7
    declare                        shift and go to state 11

state 6

    (15) declare -> DEC . decaux
    (16) decaux -> . type ID func_declare_var declareaux
    (17) decaux -> . type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux
    (31) type -> . BOOL func_type
    (32) type -> . NUMBER func_type
    (33) type -> . WORD func_type
    (34) type -> . SENTENCE func_type

    BOOL            shift and go to state 14
    NUMBER          shift and go to state 13
    WORD            shift and go to state 16
    SENTENCE        shift and go to state 12

    decaux                         shift and go to state 15
    type                           shift and go to state 17

state 7

    (2) start -> KOTOBA ID func_start ENDSTMT startaux . BEGIN func_begin_main block END

    BEGIN           shift and go to state 18


state 8

    (4) startaux -> empty .

    BEGIN           reduce using rule 4 (startaux -> empty .)


state 9

    (3) startaux -> function . startaux
    (3) startaux -> . function startaux
    (4) startaux -> . empty
    (58) function -> . FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> . FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (81) empty -> .

    FUNC            shift and go to state 10
    BEGIN           reduce using rule 81 (empty -> .)

    function                       shift and go to state 9
    startaux                       shift and go to state 19
    empty                          shift and go to state 8

state 10

    (58) function -> FUNC . funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC . funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (60) funcaux -> . type
    (61) funcaux -> . VOID
    (31) type -> . BOOL func_type
    (32) type -> . NUMBER func_type
    (33) type -> . WORD func_type
    (34) type -> . SENTENCE func_type

    VOID            shift and go to state 21
    BOOL            shift and go to state 14
    NUMBER          shift and go to state 13
    WORD            shift and go to state 16
    SENTENCE        shift and go to state 12

    type                           shift and go to state 20
    funcaux                        shift and go to state 22

state 11

    (1) start -> KOTOBA ID func_start ENDSTMT declare . startaux BEGIN func_begin_main block END
    (3) startaux -> . function startaux
    (4) startaux -> . empty
    (58) function -> . FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> . FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (81) empty -> .

    FUNC            shift and go to state 10
    BEGIN           reduce using rule 81 (empty -> .)

    function                       shift and go to state 9
    empty                          shift and go to state 8
    startaux                       shift and go to state 23

state 12

    (34) type -> SENTENCE . func_type
    (87) func_type -> .

    ID              reduce using rule 87 (func_type -> .)

    func_type                      shift and go to state 24

state 13

    (32) type -> NUMBER . func_type
    (87) func_type -> .

    ID              reduce using rule 87 (func_type -> .)

    func_type                      shift and go to state 25

state 14

    (31) type -> BOOL . func_type
    (87) func_type -> .

    ID              reduce using rule 87 (func_type -> .)

    func_type                      shift and go to state 26

state 15

    (15) declare -> DEC decaux .

    READ            reduce using rule 15 (declare -> DEC decaux .)
    WRITE           reduce using rule 15 (declare -> DEC decaux .)
    ID              reduce using rule 15 (declare -> DEC decaux .)
    IF              reduce using rule 15 (declare -> DEC decaux .)
    WHILE           reduce using rule 15 (declare -> DEC decaux .)
    DO              reduce using rule 15 (declare -> DEC decaux .)
    NOT             reduce using rule 15 (declare -> DEC decaux .)
    OPENPAREN       reduce using rule 15 (declare -> DEC decaux .)
    BOOLCTE         reduce using rule 15 (declare -> DEC decaux .)
    NUMBERCTE       reduce using rule 15 (declare -> DEC decaux .)
    WORDCTE         reduce using rule 15 (declare -> DEC decaux .)
    SENTENCECTE     reduce using rule 15 (declare -> DEC decaux .)
    RETURN          reduce using rule 15 (declare -> DEC decaux .)
    ENDSTMT         reduce using rule 15 (declare -> DEC decaux .)
    FUNC            reduce using rule 15 (declare -> DEC decaux .)
    BEGIN           reduce using rule 15 (declare -> DEC decaux .)


state 16

    (33) type -> WORD . func_type
    (87) func_type -> .

    ID              reduce using rule 87 (func_type -> .)

    func_type                      shift and go to state 27

state 17

    (16) decaux -> type . ID func_declare_var declareaux
    (17) decaux -> type . ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux

    ID              shift and go to state 28


state 18

    (2) start -> KOTOBA ID func_start ENDSTMT startaux BEGIN . func_begin_main block END
    (94) func_begin_main -> .

    OPENCURL        reduce using rule 94 (func_begin_main -> .)

    func_begin_main                shift and go to state 29

state 19

    (3) startaux -> function startaux .

    BEGIN           reduce using rule 3 (startaux -> function startaux .)


state 20

    (60) funcaux -> type .

    ID              reduce using rule 60 (funcaux -> type .)


state 21

    (61) funcaux -> VOID .

    ID              reduce using rule 61 (funcaux -> VOID .)


state 22

    (58) function -> FUNC funcaux . ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux . ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL

    ID              shift and go to state 30


state 23

    (1) start -> KOTOBA ID func_start ENDSTMT declare startaux . BEGIN func_begin_main block END

    BEGIN           shift and go to state 31


state 24

    (34) type -> SENTENCE func_type .

    ID              reduce using rule 34 (type -> SENTENCE func_type .)


state 25

    (32) type -> NUMBER func_type .

    ID              reduce using rule 32 (type -> NUMBER func_type .)


state 26

    (31) type -> BOOL func_type .

    ID              reduce using rule 31 (type -> BOOL func_type .)


state 27

    (33) type -> WORD func_type .

    ID              reduce using rule 33 (type -> WORD func_type .)


state 28

    (16) decaux -> type ID . func_declare_var declareaux
    (17) decaux -> type ID . OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux
    (83) func_declare_var -> .

    OPENBRAC        shift and go to state 32
    ENDSTMT         reduce using rule 83 (func_declare_var -> .)
    COMA            reduce using rule 83 (func_declare_var -> .)

    func_declare_var               shift and go to state 33

state 29

    (2) start -> KOTOBA ID func_start ENDSTMT startaux BEGIN func_begin_main . block END
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 34

    block                          shift and go to state 35

state 30

    (58) function -> FUNC funcaux ID . func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID . func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (86) func_declare_function -> .

    OPENPAREN       reduce using rule 86 (func_declare_function -> .)

    func_declare_function          shift and go to state 36

state 31

    (1) start -> KOTOBA ID func_start ENDSTMT declare startaux BEGIN . func_begin_main block END
    (94) func_begin_main -> .

    OPENCURL        reduce using rule 94 (func_begin_main -> .)

    func_begin_main                shift and go to state 37

state 32

    (17) decaux -> type ID OPENBRAC . func_isSize cte CLOSEBRAC func_declare_array declareaux
    (85) func_isSize -> .

    ID              reduce using rule 85 (func_isSize -> .)
    BOOLCTE         reduce using rule 85 (func_isSize -> .)
    NUMBERCTE       reduce using rule 85 (func_isSize -> .)
    WORDCTE         reduce using rule 85 (func_isSize -> .)
    SENTENCECTE     reduce using rule 85 (func_isSize -> .)

    func_isSize                    shift and go to state 38

state 33

    (16) decaux -> type ID func_declare_var . declareaux
    (18) declareaux -> . ENDSTMT
    (19) declareaux -> . COMA decaux

    ENDSTMT         shift and go to state 39
    COMA            shift and go to state 40

    declareaux                     shift and go to state 41

state 34

    (5) block -> OPENCURL . blockaux CLOSECURL
    (6) blockaux -> . action blockaux
    (7) blockaux -> . empty
    (8) action -> . input
    (9) action -> . output
    (10) action -> . statement
    (81) empty -> .
    (11) input -> . READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT
    (12) output -> . WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
    (35) statement -> . assign
    (36) statement -> . expression
    (37) statement -> . condition
    (38) statement -> . cycle
    (39) statement -> . specialfunction
    (20) assign -> . ID func_constantID EQUAL func_assign assignaux
    (21) assign -> . ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (54) condition -> . IF OPENPAREN expression CLOSEPAREN block
    (55) condition -> . IF OPENPAREN expression CLOSEPAREN block ELSE block
    (56) cycle -> . WHILE OPENPAREN expression CLOSEPAREN block
    (57) cycle -> . DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (68) specialfunction -> . ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    CLOSECURL       reduce using rule 81 (empty -> .)
    READ            shift and go to state 44
    WRITE           shift and go to state 54
    ID              shift and go to state 58
    IF              shift and go to state 51
    WHILE           shift and go to state 63
    DO              shift and go to state 42
    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    statement                      shift and go to state 48
    factor                         shift and go to state 49
    input                          shift and go to state 50
    blockaux                       shift and go to state 53
    relopexpression                shift and go to state 56
    condition                      shift and go to state 59
    cycle                          shift and go to state 60
    term                           shift and go to state 61
    specialfunction                shift and go to state 62
    cte                            shift and go to state 64
    empty                          shift and go to state 52
    exp                            shift and go to state 65
    action                         shift and go to state 66
    output                         shift and go to state 67
    expression                     shift and go to state 68
    assign                         shift and go to state 69

state 35

    (2) start -> KOTOBA ID func_start ENDSTMT startaux BEGIN func_begin_main block . END

    END             shift and go to state 70


state 36

    (58) function -> FUNC funcaux ID func_declare_function . OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID func_declare_function . OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL

    OPENPAREN       shift and go to state 71


state 37

    (1) start -> KOTOBA ID func_start ENDSTMT declare startaux BEGIN func_begin_main . block END
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 34

    block                          shift and go to state 72

state 38

    (17) decaux -> type ID OPENBRAC func_isSize . cte CLOSEBRAC func_declare_array declareaux
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    cte                            shift and go to state 73

state 39

    (18) declareaux -> ENDSTMT .

    FUNC            reduce using rule 18 (declareaux -> ENDSTMT .)
    BEGIN           reduce using rule 18 (declareaux -> ENDSTMT .)
    READ            reduce using rule 18 (declareaux -> ENDSTMT .)
    WRITE           reduce using rule 18 (declareaux -> ENDSTMT .)
    ID              reduce using rule 18 (declareaux -> ENDSTMT .)
    IF              reduce using rule 18 (declareaux -> ENDSTMT .)
    WHILE           reduce using rule 18 (declareaux -> ENDSTMT .)
    DO              reduce using rule 18 (declareaux -> ENDSTMT .)
    NOT             reduce using rule 18 (declareaux -> ENDSTMT .)
    OPENPAREN       reduce using rule 18 (declareaux -> ENDSTMT .)
    BOOLCTE         reduce using rule 18 (declareaux -> ENDSTMT .)
    NUMBERCTE       reduce using rule 18 (declareaux -> ENDSTMT .)
    WORDCTE         reduce using rule 18 (declareaux -> ENDSTMT .)
    SENTENCECTE     reduce using rule 18 (declareaux -> ENDSTMT .)
    RETURN          reduce using rule 18 (declareaux -> ENDSTMT .)
    ENDSTMT         reduce using rule 18 (declareaux -> ENDSTMT .)


state 40

    (19) declareaux -> COMA . decaux
    (16) decaux -> . type ID func_declare_var declareaux
    (17) decaux -> . type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux
    (31) type -> . BOOL func_type
    (32) type -> . NUMBER func_type
    (33) type -> . WORD func_type
    (34) type -> . SENTENCE func_type

    BOOL            shift and go to state 14
    NUMBER          shift and go to state 13
    WORD            shift and go to state 16
    SENTENCE        shift and go to state 12

    decaux                         shift and go to state 75
    type                           shift and go to state 17

state 41

    (16) decaux -> type ID func_declare_var declareaux .

    FUNC            reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    BEGIN           reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    READ            reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    WRITE           reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    ID              reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    IF              reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    WHILE           reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    DO              reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    NOT             reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    OPENPAREN       reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    BOOLCTE         reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    NUMBERCTE       reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    WORDCTE         reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    SENTENCECTE     reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    RETURN          reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)
    ENDSTMT         reduce using rule 16 (decaux -> type ID func_declare_var declareaux .)


state 42

    (57) cycle -> DO . block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 34

    block                          shift and go to state 76

state 43

    (29) cte -> WORDCTE . func_constant func_wordCte
    (88) func_constant -> .

    MULT            reduce using rule 88 (func_constant -> .)
    DIV             reduce using rule 88 (func_constant -> .)
    PLUS            reduce using rule 88 (func_constant -> .)
    MINUS           reduce using rule 88 (func_constant -> .)
    RELOP           reduce using rule 88 (func_constant -> .)
    AND             reduce using rule 88 (func_constant -> .)
    OR              reduce using rule 88 (func_constant -> .)
    READ            reduce using rule 88 (func_constant -> .)
    WRITE           reduce using rule 88 (func_constant -> .)
    ID              reduce using rule 88 (func_constant -> .)
    IF              reduce using rule 88 (func_constant -> .)
    WHILE           reduce using rule 88 (func_constant -> .)
    DO              reduce using rule 88 (func_constant -> .)
    NOT             reduce using rule 88 (func_constant -> .)
    OPENPAREN       reduce using rule 88 (func_constant -> .)
    BOOLCTE         reduce using rule 88 (func_constant -> .)
    NUMBERCTE       reduce using rule 88 (func_constant -> .)
    WORDCTE         reduce using rule 88 (func_constant -> .)
    SENTENCECTE     reduce using rule 88 (func_constant -> .)
    CLOSECURL       reduce using rule 88 (func_constant -> .)
    CLOSEBRAC       reduce using rule 88 (func_constant -> .)
    CLOSEPAREN      reduce using rule 88 (func_constant -> .)
    RETURN          reduce using rule 88 (func_constant -> .)
    ENDSTMT         reduce using rule 88 (func_constant -> .)
    COMA            reduce using rule 88 (func_constant -> .)

    func_constant                  shift and go to state 77

state 44

    (11) input -> READ . OPENPAREN ID func_read CLOSEPAREN ENDSTMT

    OPENPAREN       shift and go to state 78


state 45

    (30) cte -> SENTENCECTE . func_constant func_sentenceCte
    (88) func_constant -> .

    MULT            reduce using rule 88 (func_constant -> .)
    DIV             reduce using rule 88 (func_constant -> .)
    PLUS            reduce using rule 88 (func_constant -> .)
    MINUS           reduce using rule 88 (func_constant -> .)
    RELOP           reduce using rule 88 (func_constant -> .)
    AND             reduce using rule 88 (func_constant -> .)
    OR              reduce using rule 88 (func_constant -> .)
    READ            reduce using rule 88 (func_constant -> .)
    WRITE           reduce using rule 88 (func_constant -> .)
    ID              reduce using rule 88 (func_constant -> .)
    IF              reduce using rule 88 (func_constant -> .)
    WHILE           reduce using rule 88 (func_constant -> .)
    DO              reduce using rule 88 (func_constant -> .)
    NOT             reduce using rule 88 (func_constant -> .)
    OPENPAREN       reduce using rule 88 (func_constant -> .)
    BOOLCTE         reduce using rule 88 (func_constant -> .)
    NUMBERCTE       reduce using rule 88 (func_constant -> .)
    WORDCTE         reduce using rule 88 (func_constant -> .)
    SENTENCECTE     reduce using rule 88 (func_constant -> .)
    CLOSECURL       reduce using rule 88 (func_constant -> .)
    CLOSEBRAC       reduce using rule 88 (func_constant -> .)
    CLOSEPAREN      reduce using rule 88 (func_constant -> .)
    RETURN          reduce using rule 88 (func_constant -> .)
    ENDSTMT         reduce using rule 88 (func_constant -> .)
    COMA            reduce using rule 88 (func_constant -> .)

    func_constant                  shift and go to state 79

state 46

    (52) factor -> OPENPAREN . expression CLOSEPAREN
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 65
    factor                         shift and go to state 49
    relopexpression                shift and go to state 56
    expression                     shift and go to state 80

state 47

    (27) cte -> BOOLCTE . func_constant func_boolCte
    (88) func_constant -> .

    MULT            reduce using rule 88 (func_constant -> .)
    DIV             reduce using rule 88 (func_constant -> .)
    PLUS            reduce using rule 88 (func_constant -> .)
    MINUS           reduce using rule 88 (func_constant -> .)
    RELOP           reduce using rule 88 (func_constant -> .)
    AND             reduce using rule 88 (func_constant -> .)
    OR              reduce using rule 88 (func_constant -> .)
    READ            reduce using rule 88 (func_constant -> .)
    WRITE           reduce using rule 88 (func_constant -> .)
    ID              reduce using rule 88 (func_constant -> .)
    IF              reduce using rule 88 (func_constant -> .)
    WHILE           reduce using rule 88 (func_constant -> .)
    DO              reduce using rule 88 (func_constant -> .)
    NOT             reduce using rule 88 (func_constant -> .)
    OPENPAREN       reduce using rule 88 (func_constant -> .)
    BOOLCTE         reduce using rule 88 (func_constant -> .)
    NUMBERCTE       reduce using rule 88 (func_constant -> .)
    WORDCTE         reduce using rule 88 (func_constant -> .)
    SENTENCECTE     reduce using rule 88 (func_constant -> .)
    CLOSECURL       reduce using rule 88 (func_constant -> .)
    CLOSEBRAC       reduce using rule 88 (func_constant -> .)
    CLOSEPAREN      reduce using rule 88 (func_constant -> .)
    RETURN          reduce using rule 88 (func_constant -> .)
    ENDSTMT         reduce using rule 88 (func_constant -> .)
    COMA            reduce using rule 88 (func_constant -> .)

    func_constant                  shift and go to state 81

state 48

    (10) action -> statement .

    READ            reduce using rule 10 (action -> statement .)
    WRITE           reduce using rule 10 (action -> statement .)
    ID              reduce using rule 10 (action -> statement .)
    IF              reduce using rule 10 (action -> statement .)
    WHILE           reduce using rule 10 (action -> statement .)
    DO              reduce using rule 10 (action -> statement .)
    NOT             reduce using rule 10 (action -> statement .)
    OPENPAREN       reduce using rule 10 (action -> statement .)
    BOOLCTE         reduce using rule 10 (action -> statement .)
    NUMBERCTE       reduce using rule 10 (action -> statement .)
    WORDCTE         reduce using rule 10 (action -> statement .)
    SENTENCECTE     reduce using rule 10 (action -> statement .)
    CLOSECURL       reduce using rule 10 (action -> statement .)
    RETURN          reduce using rule 10 (action -> statement .)
    ENDSTMT         reduce using rule 10 (action -> statement .)


state 49

    (49) term -> factor .
    (50) term -> factor . MULT term
    (51) term -> factor . DIV term

    PLUS            reduce using rule 49 (term -> factor .)
    MINUS           reduce using rule 49 (term -> factor .)
    RELOP           reduce using rule 49 (term -> factor .)
    AND             reduce using rule 49 (term -> factor .)
    OR              reduce using rule 49 (term -> factor .)
    CLOSEPAREN      reduce using rule 49 (term -> factor .)
    READ            reduce using rule 49 (term -> factor .)
    WRITE           reduce using rule 49 (term -> factor .)
    ID              reduce using rule 49 (term -> factor .)
    IF              reduce using rule 49 (term -> factor .)
    WHILE           reduce using rule 49 (term -> factor .)
    DO              reduce using rule 49 (term -> factor .)
    NOT             reduce using rule 49 (term -> factor .)
    OPENPAREN       reduce using rule 49 (term -> factor .)
    BOOLCTE         reduce using rule 49 (term -> factor .)
    NUMBERCTE       reduce using rule 49 (term -> factor .)
    WORDCTE         reduce using rule 49 (term -> factor .)
    SENTENCECTE     reduce using rule 49 (term -> factor .)
    RETURN          reduce using rule 49 (term -> factor .)
    ENDSTMT         reduce using rule 49 (term -> factor .)
    COMA            reduce using rule 49 (term -> factor .)
    CLOSECURL       reduce using rule 49 (term -> factor .)
    MULT            shift and go to state 83
    DIV             shift and go to state 82


state 50

    (8) action -> input .

    READ            reduce using rule 8 (action -> input .)
    WRITE           reduce using rule 8 (action -> input .)
    ID              reduce using rule 8 (action -> input .)
    IF              reduce using rule 8 (action -> input .)
    WHILE           reduce using rule 8 (action -> input .)
    DO              reduce using rule 8 (action -> input .)
    NOT             reduce using rule 8 (action -> input .)
    OPENPAREN       reduce using rule 8 (action -> input .)
    BOOLCTE         reduce using rule 8 (action -> input .)
    NUMBERCTE       reduce using rule 8 (action -> input .)
    WORDCTE         reduce using rule 8 (action -> input .)
    SENTENCECTE     reduce using rule 8 (action -> input .)
    CLOSECURL       reduce using rule 8 (action -> input .)
    RETURN          reduce using rule 8 (action -> input .)
    ENDSTMT         reduce using rule 8 (action -> input .)


state 51

    (54) condition -> IF . OPENPAREN expression CLOSEPAREN block
    (55) condition -> IF . OPENPAREN expression CLOSEPAREN block ELSE block

    OPENPAREN       shift and go to state 84


state 52

    (7) blockaux -> empty .

    CLOSECURL       reduce using rule 7 (blockaux -> empty .)
    RETURN          reduce using rule 7 (blockaux -> empty .)
    ENDSTMT         reduce using rule 7 (blockaux -> empty .)


state 53

    (5) block -> OPENCURL blockaux . CLOSECURL

    CLOSECURL       shift and go to state 85


state 54

    (12) output -> WRITE . OPENPAREN outputaux CLOSEPAREN ENDSTMT

    OPENPAREN       shift and go to state 86


state 55

    (45) relopexpression -> NOT . exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 87
    factor                         shift and go to state 49

state 56

    (40) expression -> relopexpression .
    (41) expression -> relopexpression . AND expression
    (42) expression -> relopexpression . OR expression

    CLOSEPAREN      reduce using rule 40 (expression -> relopexpression .)
    READ            reduce using rule 40 (expression -> relopexpression .)
    WRITE           reduce using rule 40 (expression -> relopexpression .)
    ID              reduce using rule 40 (expression -> relopexpression .)
    IF              reduce using rule 40 (expression -> relopexpression .)
    WHILE           reduce using rule 40 (expression -> relopexpression .)
    DO              reduce using rule 40 (expression -> relopexpression .)
    NOT             reduce using rule 40 (expression -> relopexpression .)
    OPENPAREN       reduce using rule 40 (expression -> relopexpression .)
    BOOLCTE         reduce using rule 40 (expression -> relopexpression .)
    NUMBERCTE       reduce using rule 40 (expression -> relopexpression .)
    WORDCTE         reduce using rule 40 (expression -> relopexpression .)
    SENTENCECTE     reduce using rule 40 (expression -> relopexpression .)
    RETURN          reduce using rule 40 (expression -> relopexpression .)
    ENDSTMT         reduce using rule 40 (expression -> relopexpression .)
    CLOSECURL       reduce using rule 40 (expression -> relopexpression .)
    COMA            reduce using rule 40 (expression -> relopexpression .)
    AND             shift and go to state 88
    OR              shift and go to state 89


state 57

    (28) cte -> NUMBERCTE . func_constant func_numberCte
    (88) func_constant -> .

    MULT            reduce using rule 88 (func_constant -> .)
    DIV             reduce using rule 88 (func_constant -> .)
    PLUS            reduce using rule 88 (func_constant -> .)
    MINUS           reduce using rule 88 (func_constant -> .)
    RELOP           reduce using rule 88 (func_constant -> .)
    AND             reduce using rule 88 (func_constant -> .)
    OR              reduce using rule 88 (func_constant -> .)
    READ            reduce using rule 88 (func_constant -> .)
    WRITE           reduce using rule 88 (func_constant -> .)
    ID              reduce using rule 88 (func_constant -> .)
    IF              reduce using rule 88 (func_constant -> .)
    WHILE           reduce using rule 88 (func_constant -> .)
    DO              reduce using rule 88 (func_constant -> .)
    NOT             reduce using rule 88 (func_constant -> .)
    OPENPAREN       reduce using rule 88 (func_constant -> .)
    BOOLCTE         reduce using rule 88 (func_constant -> .)
    NUMBERCTE       reduce using rule 88 (func_constant -> .)
    WORDCTE         reduce using rule 88 (func_constant -> .)
    SENTENCECTE     reduce using rule 88 (func_constant -> .)
    CLOSECURL       reduce using rule 88 (func_constant -> .)
    CLOSEBRAC       reduce using rule 88 (func_constant -> .)
    CLOSEPAREN      reduce using rule 88 (func_constant -> .)
    RETURN          reduce using rule 88 (func_constant -> .)
    ENDSTMT         reduce using rule 88 (func_constant -> .)
    COMA            reduce using rule 88 (func_constant -> .)

    func_constant                  shift and go to state 90

state 58

    (20) assign -> ID . func_constantID EQUAL func_assign assignaux
    (21) assign -> ID . func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux
    (68) specialfunction -> ID . DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (26) cte -> ID . func_constantID
    (89) func_constantID -> .

    DOT             shift and go to state 92
    EQUAL           reduce using rule 89 (func_constantID -> .)
    OPENBRAC        reduce using rule 89 (func_constantID -> .)
    MULT            reduce using rule 89 (func_constantID -> .)
    DIV             reduce using rule 89 (func_constantID -> .)
    PLUS            reduce using rule 89 (func_constantID -> .)
    MINUS           reduce using rule 89 (func_constantID -> .)
    RELOP           reduce using rule 89 (func_constantID -> .)
    AND             reduce using rule 89 (func_constantID -> .)
    OR              reduce using rule 89 (func_constantID -> .)
    READ            reduce using rule 89 (func_constantID -> .)
    WRITE           reduce using rule 89 (func_constantID -> .)
    ID              reduce using rule 89 (func_constantID -> .)
    IF              reduce using rule 89 (func_constantID -> .)
    WHILE           reduce using rule 89 (func_constantID -> .)
    DO              reduce using rule 89 (func_constantID -> .)
    NOT             reduce using rule 89 (func_constantID -> .)
    OPENPAREN       reduce using rule 89 (func_constantID -> .)
    BOOLCTE         reduce using rule 89 (func_constantID -> .)
    NUMBERCTE       reduce using rule 89 (func_constantID -> .)
    WORDCTE         reduce using rule 89 (func_constantID -> .)
    SENTENCECTE     reduce using rule 89 (func_constantID -> .)
    CLOSECURL       reduce using rule 89 (func_constantID -> .)
    RETURN          reduce using rule 89 (func_constantID -> .)
    ENDSTMT         reduce using rule 89 (func_constantID -> .)

    func_constantID                shift and go to state 91

state 59

    (37) statement -> condition .

    READ            reduce using rule 37 (statement -> condition .)
    WRITE           reduce using rule 37 (statement -> condition .)
    ID              reduce using rule 37 (statement -> condition .)
    IF              reduce using rule 37 (statement -> condition .)
    WHILE           reduce using rule 37 (statement -> condition .)
    DO              reduce using rule 37 (statement -> condition .)
    NOT             reduce using rule 37 (statement -> condition .)
    OPENPAREN       reduce using rule 37 (statement -> condition .)
    BOOLCTE         reduce using rule 37 (statement -> condition .)
    NUMBERCTE       reduce using rule 37 (statement -> condition .)
    WORDCTE         reduce using rule 37 (statement -> condition .)
    SENTENCECTE     reduce using rule 37 (statement -> condition .)
    RETURN          reduce using rule 37 (statement -> condition .)
    ENDSTMT         reduce using rule 37 (statement -> condition .)
    CLOSECURL       reduce using rule 37 (statement -> condition .)


state 60

    (38) statement -> cycle .

    READ            reduce using rule 38 (statement -> cycle .)
    WRITE           reduce using rule 38 (statement -> cycle .)
    ID              reduce using rule 38 (statement -> cycle .)
    IF              reduce using rule 38 (statement -> cycle .)
    WHILE           reduce using rule 38 (statement -> cycle .)
    DO              reduce using rule 38 (statement -> cycle .)
    NOT             reduce using rule 38 (statement -> cycle .)
    OPENPAREN       reduce using rule 38 (statement -> cycle .)
    BOOLCTE         reduce using rule 38 (statement -> cycle .)
    NUMBERCTE       reduce using rule 38 (statement -> cycle .)
    WORDCTE         reduce using rule 38 (statement -> cycle .)
    SENTENCECTE     reduce using rule 38 (statement -> cycle .)
    RETURN          reduce using rule 38 (statement -> cycle .)
    ENDSTMT         reduce using rule 38 (statement -> cycle .)
    CLOSECURL       reduce using rule 38 (statement -> cycle .)


state 61

    (46) exp -> term .
    (47) exp -> term . PLUS exp
    (48) exp -> term . MINUS exp

    ENDSTMT         reduce using rule 46 (exp -> term .)
    RELOP           reduce using rule 46 (exp -> term .)
    AND             reduce using rule 46 (exp -> term .)
    OR              reduce using rule 46 (exp -> term .)
    READ            reduce using rule 46 (exp -> term .)
    WRITE           reduce using rule 46 (exp -> term .)
    ID              reduce using rule 46 (exp -> term .)
    IF              reduce using rule 46 (exp -> term .)
    WHILE           reduce using rule 46 (exp -> term .)
    DO              reduce using rule 46 (exp -> term .)
    NOT             reduce using rule 46 (exp -> term .)
    OPENPAREN       reduce using rule 46 (exp -> term .)
    BOOLCTE         reduce using rule 46 (exp -> term .)
    NUMBERCTE       reduce using rule 46 (exp -> term .)
    WORDCTE         reduce using rule 46 (exp -> term .)
    SENTENCECTE     reduce using rule 46 (exp -> term .)
    CLOSECURL       reduce using rule 46 (exp -> term .)
    CLOSEPAREN      reduce using rule 46 (exp -> term .)
    RETURN          reduce using rule 46 (exp -> term .)
    COMA            reduce using rule 46 (exp -> term .)
    PLUS            shift and go to state 93
    MINUS           shift and go to state 94


state 62

    (39) statement -> specialfunction .

    READ            reduce using rule 39 (statement -> specialfunction .)
    WRITE           reduce using rule 39 (statement -> specialfunction .)
    ID              reduce using rule 39 (statement -> specialfunction .)
    IF              reduce using rule 39 (statement -> specialfunction .)
    WHILE           reduce using rule 39 (statement -> specialfunction .)
    DO              reduce using rule 39 (statement -> specialfunction .)
    NOT             reduce using rule 39 (statement -> specialfunction .)
    OPENPAREN       reduce using rule 39 (statement -> specialfunction .)
    BOOLCTE         reduce using rule 39 (statement -> specialfunction .)
    NUMBERCTE       reduce using rule 39 (statement -> specialfunction .)
    WORDCTE         reduce using rule 39 (statement -> specialfunction .)
    SENTENCECTE     reduce using rule 39 (statement -> specialfunction .)
    RETURN          reduce using rule 39 (statement -> specialfunction .)
    ENDSTMT         reduce using rule 39 (statement -> specialfunction .)
    CLOSECURL       reduce using rule 39 (statement -> specialfunction .)


state 63

    (56) cycle -> WHILE . OPENPAREN expression CLOSEPAREN block

    OPENPAREN       shift and go to state 95


state 64

    (53) factor -> cte .

    MULT            reduce using rule 53 (factor -> cte .)
    DIV             reduce using rule 53 (factor -> cte .)
    PLUS            reduce using rule 53 (factor -> cte .)
    MINUS           reduce using rule 53 (factor -> cte .)
    RELOP           reduce using rule 53 (factor -> cte .)
    AND             reduce using rule 53 (factor -> cte .)
    OR              reduce using rule 53 (factor -> cte .)
    CLOSEPAREN      reduce using rule 53 (factor -> cte .)
    READ            reduce using rule 53 (factor -> cte .)
    WRITE           reduce using rule 53 (factor -> cte .)
    ID              reduce using rule 53 (factor -> cte .)
    IF              reduce using rule 53 (factor -> cte .)
    WHILE           reduce using rule 53 (factor -> cte .)
    DO              reduce using rule 53 (factor -> cte .)
    NOT             reduce using rule 53 (factor -> cte .)
    OPENPAREN       reduce using rule 53 (factor -> cte .)
    BOOLCTE         reduce using rule 53 (factor -> cte .)
    NUMBERCTE       reduce using rule 53 (factor -> cte .)
    WORDCTE         reduce using rule 53 (factor -> cte .)
    SENTENCECTE     reduce using rule 53 (factor -> cte .)
    CLOSECURL       reduce using rule 53 (factor -> cte .)
    RETURN          reduce using rule 53 (factor -> cte .)
    ENDSTMT         reduce using rule 53 (factor -> cte .)
    COMA            reduce using rule 53 (factor -> cte .)


state 65

    (43) relopexpression -> exp .
    (44) relopexpression -> exp . RELOP exp

    AND             reduce using rule 43 (relopexpression -> exp .)
    OR              reduce using rule 43 (relopexpression -> exp .)
    CLOSEPAREN      reduce using rule 43 (relopexpression -> exp .)
    READ            reduce using rule 43 (relopexpression -> exp .)
    WRITE           reduce using rule 43 (relopexpression -> exp .)
    ID              reduce using rule 43 (relopexpression -> exp .)
    IF              reduce using rule 43 (relopexpression -> exp .)
    WHILE           reduce using rule 43 (relopexpression -> exp .)
    DO              reduce using rule 43 (relopexpression -> exp .)
    NOT             reduce using rule 43 (relopexpression -> exp .)
    OPENPAREN       reduce using rule 43 (relopexpression -> exp .)
    BOOLCTE         reduce using rule 43 (relopexpression -> exp .)
    NUMBERCTE       reduce using rule 43 (relopexpression -> exp .)
    WORDCTE         reduce using rule 43 (relopexpression -> exp .)
    SENTENCECTE     reduce using rule 43 (relopexpression -> exp .)
    CLOSECURL       reduce using rule 43 (relopexpression -> exp .)
    COMA            reduce using rule 43 (relopexpression -> exp .)
    RETURN          reduce using rule 43 (relopexpression -> exp .)
    ENDSTMT         reduce using rule 43 (relopexpression -> exp .)
    RELOP           shift and go to state 96


state 66

    (6) blockaux -> action . blockaux
    (6) blockaux -> . action blockaux
    (7) blockaux -> . empty
    (8) action -> . input
    (9) action -> . output
    (10) action -> . statement
    (81) empty -> .
    (11) input -> . READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT
    (12) output -> . WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
    (35) statement -> . assign
    (36) statement -> . expression
    (37) statement -> . condition
    (38) statement -> . cycle
    (39) statement -> . specialfunction
    (20) assign -> . ID func_constantID EQUAL func_assign assignaux
    (21) assign -> . ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (54) condition -> . IF OPENPAREN expression CLOSEPAREN block
    (55) condition -> . IF OPENPAREN expression CLOSEPAREN block ELSE block
    (56) cycle -> . WHILE OPENPAREN expression CLOSEPAREN block
    (57) cycle -> . DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (68) specialfunction -> . ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    CLOSECURL       reduce using rule 81 (empty -> .)
    RETURN          reduce using rule 81 (empty -> .)
    ENDSTMT         reduce using rule 81 (empty -> .)
    READ            shift and go to state 44
    WRITE           shift and go to state 54
    ID              shift and go to state 58
    IF              shift and go to state 51
    WHILE           shift and go to state 63
    DO              shift and go to state 42
    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    statement                      shift and go to state 48
    factor                         shift and go to state 49
    input                          shift and go to state 50
    blockaux                       shift and go to state 97
    relopexpression                shift and go to state 56
    condition                      shift and go to state 59
    cycle                          shift and go to state 60
    term                           shift and go to state 61
    specialfunction                shift and go to state 62
    cte                            shift and go to state 64
    empty                          shift and go to state 52
    exp                            shift and go to state 65
    action                         shift and go to state 66
    output                         shift and go to state 67
    expression                     shift and go to state 68
    assign                         shift and go to state 69

state 67

    (9) action -> output .

    READ            reduce using rule 9 (action -> output .)
    WRITE           reduce using rule 9 (action -> output .)
    ID              reduce using rule 9 (action -> output .)
    IF              reduce using rule 9 (action -> output .)
    WHILE           reduce using rule 9 (action -> output .)
    DO              reduce using rule 9 (action -> output .)
    NOT             reduce using rule 9 (action -> output .)
    OPENPAREN       reduce using rule 9 (action -> output .)
    BOOLCTE         reduce using rule 9 (action -> output .)
    NUMBERCTE       reduce using rule 9 (action -> output .)
    WORDCTE         reduce using rule 9 (action -> output .)
    SENTENCECTE     reduce using rule 9 (action -> output .)
    CLOSECURL       reduce using rule 9 (action -> output .)
    RETURN          reduce using rule 9 (action -> output .)
    ENDSTMT         reduce using rule 9 (action -> output .)


state 68

    (36) statement -> expression .

    READ            reduce using rule 36 (statement -> expression .)
    WRITE           reduce using rule 36 (statement -> expression .)
    ID              reduce using rule 36 (statement -> expression .)
    IF              reduce using rule 36 (statement -> expression .)
    WHILE           reduce using rule 36 (statement -> expression .)
    DO              reduce using rule 36 (statement -> expression .)
    NOT             reduce using rule 36 (statement -> expression .)
    OPENPAREN       reduce using rule 36 (statement -> expression .)
    BOOLCTE         reduce using rule 36 (statement -> expression .)
    NUMBERCTE       reduce using rule 36 (statement -> expression .)
    WORDCTE         reduce using rule 36 (statement -> expression .)
    SENTENCECTE     reduce using rule 36 (statement -> expression .)
    RETURN          reduce using rule 36 (statement -> expression .)
    ENDSTMT         reduce using rule 36 (statement -> expression .)
    CLOSECURL       reduce using rule 36 (statement -> expression .)


state 69

    (35) statement -> assign .

    READ            reduce using rule 35 (statement -> assign .)
    WRITE           reduce using rule 35 (statement -> assign .)
    ID              reduce using rule 35 (statement -> assign .)
    IF              reduce using rule 35 (statement -> assign .)
    WHILE           reduce using rule 35 (statement -> assign .)
    DO              reduce using rule 35 (statement -> assign .)
    NOT             reduce using rule 35 (statement -> assign .)
    OPENPAREN       reduce using rule 35 (statement -> assign .)
    BOOLCTE         reduce using rule 35 (statement -> assign .)
    NUMBERCTE       reduce using rule 35 (statement -> assign .)
    WORDCTE         reduce using rule 35 (statement -> assign .)
    SENTENCECTE     reduce using rule 35 (statement -> assign .)
    RETURN          reduce using rule 35 (statement -> assign .)
    ENDSTMT         reduce using rule 35 (statement -> assign .)
    CLOSECURL       reduce using rule 35 (statement -> assign .)


state 70

    (2) start -> KOTOBA ID func_start ENDSTMT startaux BEGIN func_begin_main block END .

    $end            reduce using rule 2 (start -> KOTOBA ID func_start ENDSTMT startaux BEGIN func_begin_main block END .)


state 71

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN . parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID func_declare_function OPENPAREN . parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (62) parameter -> . type ID func_declare_var parameteraux
    (63) parameter -> . type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array parameteraux
    (31) type -> . BOOL func_type
    (32) type -> . NUMBER func_type
    (33) type -> . WORD func_type
    (34) type -> . SENTENCE func_type

    BOOL            shift and go to state 14
    NUMBER          shift and go to state 13
    WORD            shift and go to state 16
    SENTENCE        shift and go to state 12

    type                           shift and go to state 98
    parameter                      shift and go to state 99

state 72

    (1) start -> KOTOBA ID func_start ENDSTMT declare startaux BEGIN func_begin_main block . END

    END             shift and go to state 100


state 73

    (17) decaux -> type ID OPENBRAC func_isSize cte . CLOSEBRAC func_declare_array declareaux

    CLOSEBRAC       shift and go to state 101


state 74

    (26) cte -> ID . func_constantID
    (89) func_constantID -> .

    CLOSEBRAC       reduce using rule 89 (func_constantID -> .)
    MULT            reduce using rule 89 (func_constantID -> .)
    DIV             reduce using rule 89 (func_constantID -> .)
    PLUS            reduce using rule 89 (func_constantID -> .)
    MINUS           reduce using rule 89 (func_constantID -> .)
    RELOP           reduce using rule 89 (func_constantID -> .)
    AND             reduce using rule 89 (func_constantID -> .)
    OR              reduce using rule 89 (func_constantID -> .)
    CLOSEPAREN      reduce using rule 89 (func_constantID -> .)
    READ            reduce using rule 89 (func_constantID -> .)
    WRITE           reduce using rule 89 (func_constantID -> .)
    ID              reduce using rule 89 (func_constantID -> .)
    IF              reduce using rule 89 (func_constantID -> .)
    WHILE           reduce using rule 89 (func_constantID -> .)
    DO              reduce using rule 89 (func_constantID -> .)
    NOT             reduce using rule 89 (func_constantID -> .)
    OPENPAREN       reduce using rule 89 (func_constantID -> .)
    BOOLCTE         reduce using rule 89 (func_constantID -> .)
    NUMBERCTE       reduce using rule 89 (func_constantID -> .)
    WORDCTE         reduce using rule 89 (func_constantID -> .)
    SENTENCECTE     reduce using rule 89 (func_constantID -> .)
    CLOSECURL       reduce using rule 89 (func_constantID -> .)
    RETURN          reduce using rule 89 (func_constantID -> .)
    ENDSTMT         reduce using rule 89 (func_constantID -> .)
    COMA            reduce using rule 89 (func_constantID -> .)

    func_constantID                shift and go to state 102

state 75

    (19) declareaux -> COMA decaux .

    FUNC            reduce using rule 19 (declareaux -> COMA decaux .)
    BEGIN           reduce using rule 19 (declareaux -> COMA decaux .)
    READ            reduce using rule 19 (declareaux -> COMA decaux .)
    WRITE           reduce using rule 19 (declareaux -> COMA decaux .)
    ID              reduce using rule 19 (declareaux -> COMA decaux .)
    IF              reduce using rule 19 (declareaux -> COMA decaux .)
    WHILE           reduce using rule 19 (declareaux -> COMA decaux .)
    DO              reduce using rule 19 (declareaux -> COMA decaux .)
    NOT             reduce using rule 19 (declareaux -> COMA decaux .)
    OPENPAREN       reduce using rule 19 (declareaux -> COMA decaux .)
    BOOLCTE         reduce using rule 19 (declareaux -> COMA decaux .)
    NUMBERCTE       reduce using rule 19 (declareaux -> COMA decaux .)
    WORDCTE         reduce using rule 19 (declareaux -> COMA decaux .)
    SENTENCECTE     reduce using rule 19 (declareaux -> COMA decaux .)
    RETURN          reduce using rule 19 (declareaux -> COMA decaux .)
    ENDSTMT         reduce using rule 19 (declareaux -> COMA decaux .)


state 76

    (57) cycle -> DO block . WHILE OPENPAREN expression CLOSEPAREN ENDSTMT

    WHILE           shift and go to state 103


state 77

    (29) cte -> WORDCTE func_constant . func_wordCte
    (92) func_wordCte -> .

    MULT            reduce using rule 92 (func_wordCte -> .)
    DIV             reduce using rule 92 (func_wordCte -> .)
    PLUS            reduce using rule 92 (func_wordCte -> .)
    MINUS           reduce using rule 92 (func_wordCte -> .)
    RELOP           reduce using rule 92 (func_wordCte -> .)
    AND             reduce using rule 92 (func_wordCte -> .)
    OR              reduce using rule 92 (func_wordCte -> .)
    READ            reduce using rule 92 (func_wordCte -> .)
    WRITE           reduce using rule 92 (func_wordCte -> .)
    ID              reduce using rule 92 (func_wordCte -> .)
    IF              reduce using rule 92 (func_wordCte -> .)
    WHILE           reduce using rule 92 (func_wordCte -> .)
    DO              reduce using rule 92 (func_wordCte -> .)
    NOT             reduce using rule 92 (func_wordCte -> .)
    OPENPAREN       reduce using rule 92 (func_wordCte -> .)
    BOOLCTE         reduce using rule 92 (func_wordCte -> .)
    NUMBERCTE       reduce using rule 92 (func_wordCte -> .)
    WORDCTE         reduce using rule 92 (func_wordCte -> .)
    SENTENCECTE     reduce using rule 92 (func_wordCte -> .)
    CLOSECURL       reduce using rule 92 (func_wordCte -> .)
    CLOSEBRAC       reduce using rule 92 (func_wordCte -> .)
    CLOSEPAREN      reduce using rule 92 (func_wordCte -> .)
    RETURN          reduce using rule 92 (func_wordCte -> .)
    ENDSTMT         reduce using rule 92 (func_wordCte -> .)
    COMA            reduce using rule 92 (func_wordCte -> .)

    func_wordCte                   shift and go to state 104

state 78

    (11) input -> READ OPENPAREN . ID func_read CLOSEPAREN ENDSTMT

    ID              shift and go to state 105


state 79

    (30) cte -> SENTENCECTE func_constant . func_sentenceCte
    (93) func_sentenceCte -> .

    MULT            reduce using rule 93 (func_sentenceCte -> .)
    DIV             reduce using rule 93 (func_sentenceCte -> .)
    PLUS            reduce using rule 93 (func_sentenceCte -> .)
    MINUS           reduce using rule 93 (func_sentenceCte -> .)
    RELOP           reduce using rule 93 (func_sentenceCte -> .)
    AND             reduce using rule 93 (func_sentenceCte -> .)
    OR              reduce using rule 93 (func_sentenceCte -> .)
    READ            reduce using rule 93 (func_sentenceCte -> .)
    WRITE           reduce using rule 93 (func_sentenceCte -> .)
    ID              reduce using rule 93 (func_sentenceCte -> .)
    IF              reduce using rule 93 (func_sentenceCte -> .)
    WHILE           reduce using rule 93 (func_sentenceCte -> .)
    DO              reduce using rule 93 (func_sentenceCte -> .)
    NOT             reduce using rule 93 (func_sentenceCte -> .)
    OPENPAREN       reduce using rule 93 (func_sentenceCte -> .)
    BOOLCTE         reduce using rule 93 (func_sentenceCte -> .)
    NUMBERCTE       reduce using rule 93 (func_sentenceCte -> .)
    WORDCTE         reduce using rule 93 (func_sentenceCte -> .)
    SENTENCECTE     reduce using rule 93 (func_sentenceCte -> .)
    CLOSECURL       reduce using rule 93 (func_sentenceCte -> .)
    CLOSEBRAC       reduce using rule 93 (func_sentenceCte -> .)
    CLOSEPAREN      reduce using rule 93 (func_sentenceCte -> .)
    RETURN          reduce using rule 93 (func_sentenceCte -> .)
    ENDSTMT         reduce using rule 93 (func_sentenceCte -> .)
    COMA            reduce using rule 93 (func_sentenceCte -> .)

    func_sentenceCte               shift and go to state 106

state 80

    (52) factor -> OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 107


state 81

    (27) cte -> BOOLCTE func_constant . func_boolCte
    (90) func_boolCte -> .

    MULT            reduce using rule 90 (func_boolCte -> .)
    DIV             reduce using rule 90 (func_boolCte -> .)
    PLUS            reduce using rule 90 (func_boolCte -> .)
    MINUS           reduce using rule 90 (func_boolCte -> .)
    RELOP           reduce using rule 90 (func_boolCte -> .)
    AND             reduce using rule 90 (func_boolCte -> .)
    OR              reduce using rule 90 (func_boolCte -> .)
    READ            reduce using rule 90 (func_boolCte -> .)
    WRITE           reduce using rule 90 (func_boolCte -> .)
    ID              reduce using rule 90 (func_boolCte -> .)
    IF              reduce using rule 90 (func_boolCte -> .)
    WHILE           reduce using rule 90 (func_boolCte -> .)
    DO              reduce using rule 90 (func_boolCte -> .)
    NOT             reduce using rule 90 (func_boolCte -> .)
    OPENPAREN       reduce using rule 90 (func_boolCte -> .)
    BOOLCTE         reduce using rule 90 (func_boolCte -> .)
    NUMBERCTE       reduce using rule 90 (func_boolCte -> .)
    WORDCTE         reduce using rule 90 (func_boolCte -> .)
    SENTENCECTE     reduce using rule 90 (func_boolCte -> .)
    CLOSECURL       reduce using rule 90 (func_boolCte -> .)
    CLOSEBRAC       reduce using rule 90 (func_boolCte -> .)
    CLOSEPAREN      reduce using rule 90 (func_boolCte -> .)
    RETURN          reduce using rule 90 (func_boolCte -> .)
    ENDSTMT         reduce using rule 90 (func_boolCte -> .)
    COMA            reduce using rule 90 (func_boolCte -> .)

    func_boolCte                   shift and go to state 108

state 82

    (51) term -> factor DIV . term
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 109
    cte                            shift and go to state 64
    factor                         shift and go to state 49

state 83

    (50) term -> factor MULT . term
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 110
    cte                            shift and go to state 64
    factor                         shift and go to state 49

state 84

    (54) condition -> IF OPENPAREN . expression CLOSEPAREN block
    (55) condition -> IF OPENPAREN . expression CLOSEPAREN block ELSE block
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 65
    factor                         shift and go to state 49
    relopexpression                shift and go to state 56
    expression                     shift and go to state 111

state 85

    (5) block -> OPENCURL blockaux CLOSECURL .

    READ            reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    WRITE           reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    ID              reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    IF              reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    WHILE           reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    DO              reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    NOT             reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    OPENPAREN       reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    BOOLCTE         reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    NUMBERCTE       reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    WORDCTE         reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    SENTENCECTE     reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    CLOSECURL       reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    RETURN          reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    ENDSTMT         reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    END             reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    ELSE            reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)


state 86

    (12) output -> WRITE OPENPAREN . outputaux CLOSEPAREN ENDSTMT
    (13) outputaux -> . expression func_print
    (14) outputaux -> . expression func_print COMA outputaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    outputaux                      shift and go to state 112
    exp                            shift and go to state 65
    factor                         shift and go to state 49
    relopexpression                shift and go to state 56
    expression                     shift and go to state 113

state 87

    (45) relopexpression -> NOT exp .

    AND             reduce using rule 45 (relopexpression -> NOT exp .)
    OR              reduce using rule 45 (relopexpression -> NOT exp .)
    CLOSEPAREN      reduce using rule 45 (relopexpression -> NOT exp .)
    READ            reduce using rule 45 (relopexpression -> NOT exp .)
    WRITE           reduce using rule 45 (relopexpression -> NOT exp .)
    ID              reduce using rule 45 (relopexpression -> NOT exp .)
    IF              reduce using rule 45 (relopexpression -> NOT exp .)
    WHILE           reduce using rule 45 (relopexpression -> NOT exp .)
    DO              reduce using rule 45 (relopexpression -> NOT exp .)
    NOT             reduce using rule 45 (relopexpression -> NOT exp .)
    OPENPAREN       reduce using rule 45 (relopexpression -> NOT exp .)
    BOOLCTE         reduce using rule 45 (relopexpression -> NOT exp .)
    NUMBERCTE       reduce using rule 45 (relopexpression -> NOT exp .)
    WORDCTE         reduce using rule 45 (relopexpression -> NOT exp .)
    SENTENCECTE     reduce using rule 45 (relopexpression -> NOT exp .)
    CLOSECURL       reduce using rule 45 (relopexpression -> NOT exp .)
    COMA            reduce using rule 45 (relopexpression -> NOT exp .)
    RETURN          reduce using rule 45 (relopexpression -> NOT exp .)
    ENDSTMT         reduce using rule 45 (relopexpression -> NOT exp .)


state 88

    (41) expression -> relopexpression AND . expression
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 65
    factor                         shift and go to state 49
    relopexpression                shift and go to state 56
    expression                     shift and go to state 114

state 89

    (42) expression -> relopexpression OR . expression
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 65
    factor                         shift and go to state 49
    relopexpression                shift and go to state 56
    expression                     shift and go to state 115

state 90

    (28) cte -> NUMBERCTE func_constant . func_numberCte
    (91) func_numberCte -> .

    MULT            reduce using rule 91 (func_numberCte -> .)
    DIV             reduce using rule 91 (func_numberCte -> .)
    PLUS            reduce using rule 91 (func_numberCte -> .)
    MINUS           reduce using rule 91 (func_numberCte -> .)
    RELOP           reduce using rule 91 (func_numberCte -> .)
    AND             reduce using rule 91 (func_numberCte -> .)
    OR              reduce using rule 91 (func_numberCte -> .)
    READ            reduce using rule 91 (func_numberCte -> .)
    WRITE           reduce using rule 91 (func_numberCte -> .)
    ID              reduce using rule 91 (func_numberCte -> .)
    IF              reduce using rule 91 (func_numberCte -> .)
    WHILE           reduce using rule 91 (func_numberCte -> .)
    DO              reduce using rule 91 (func_numberCte -> .)
    NOT             reduce using rule 91 (func_numberCte -> .)
    OPENPAREN       reduce using rule 91 (func_numberCte -> .)
    BOOLCTE         reduce using rule 91 (func_numberCte -> .)
    NUMBERCTE       reduce using rule 91 (func_numberCte -> .)
    WORDCTE         reduce using rule 91 (func_numberCte -> .)
    SENTENCECTE     reduce using rule 91 (func_numberCte -> .)
    CLOSECURL       reduce using rule 91 (func_numberCte -> .)
    CLOSEBRAC       reduce using rule 91 (func_numberCte -> .)
    CLOSEPAREN      reduce using rule 91 (func_numberCte -> .)
    RETURN          reduce using rule 91 (func_numberCte -> .)
    ENDSTMT         reduce using rule 91 (func_numberCte -> .)
    COMA            reduce using rule 91 (func_numberCte -> .)

    func_numberCte                 shift and go to state 116

state 91

    (20) assign -> ID func_constantID . EQUAL func_assign assignaux
    (21) assign -> ID func_constantID . OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux
    (26) cte -> ID func_constantID .

    EQUAL           shift and go to state 118
    OPENBRAC        shift and go to state 117
    MULT            reduce using rule 26 (cte -> ID func_constantID .)
    DIV             reduce using rule 26 (cte -> ID func_constantID .)
    PLUS            reduce using rule 26 (cte -> ID func_constantID .)
    MINUS           reduce using rule 26 (cte -> ID func_constantID .)
    RELOP           reduce using rule 26 (cte -> ID func_constantID .)
    AND             reduce using rule 26 (cte -> ID func_constantID .)
    OR              reduce using rule 26 (cte -> ID func_constantID .)
    READ            reduce using rule 26 (cte -> ID func_constantID .)
    WRITE           reduce using rule 26 (cte -> ID func_constantID .)
    ID              reduce using rule 26 (cte -> ID func_constantID .)
    IF              reduce using rule 26 (cte -> ID func_constantID .)
    WHILE           reduce using rule 26 (cte -> ID func_constantID .)
    DO              reduce using rule 26 (cte -> ID func_constantID .)
    NOT             reduce using rule 26 (cte -> ID func_constantID .)
    OPENPAREN       reduce using rule 26 (cte -> ID func_constantID .)
    BOOLCTE         reduce using rule 26 (cte -> ID func_constantID .)
    NUMBERCTE       reduce using rule 26 (cte -> ID func_constantID .)
    WORDCTE         reduce using rule 26 (cte -> ID func_constantID .)
    SENTENCECTE     reduce using rule 26 (cte -> ID func_constantID .)
    RETURN          reduce using rule 26 (cte -> ID func_constantID .)
    ENDSTMT         reduce using rule 26 (cte -> ID func_constantID .)
    CLOSECURL       reduce using rule 26 (cte -> ID func_constantID .)


state 92

    (68) specialfunction -> ID DOT . special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (71) special -> . LENGTH
    (72) special -> . FREQUENCY
    (73) special -> . SEARCH
    (74) special -> . EXISTS
    (75) special -> . MEAN
    (76) special -> . MEDIAN
    (77) special -> . MODE
    (78) special -> . WORDCOUNT
    (79) special -> . TOKENIZE
    (80) special -> . REMOVE

    LENGTH          shift and go to state 125
    FREQUENCY       shift and go to state 126
    SEARCH          shift and go to state 120
    EXISTS          shift and go to state 121
    MEAN            shift and go to state 129
    MEDIAN          shift and go to state 123
    MODE            shift and go to state 127
    WORDCOUNT       shift and go to state 122
    TOKENIZE        shift and go to state 124
    REMOVE          shift and go to state 119

    special                        shift and go to state 128

state 93

    (47) exp -> term PLUS . exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 130
    factor                         shift and go to state 49

state 94

    (48) exp -> term MINUS . exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 131
    factor                         shift and go to state 49

state 95

    (56) cycle -> WHILE OPENPAREN . expression CLOSEPAREN block
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 65
    factor                         shift and go to state 49
    relopexpression                shift and go to state 56
    expression                     shift and go to state 132

state 96

    (44) relopexpression -> exp RELOP . exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 133
    factor                         shift and go to state 49

state 97

    (6) blockaux -> action blockaux .

    CLOSECURL       reduce using rule 6 (blockaux -> action blockaux .)
    RETURN          reduce using rule 6 (blockaux -> action blockaux .)
    ENDSTMT         reduce using rule 6 (blockaux -> action blockaux .)


state 98

    (62) parameter -> type . ID func_declare_var parameteraux
    (63) parameter -> type . ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array parameteraux

    ID              shift and go to state 134


state 99

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter . CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter . CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL

    CLOSEPAREN      shift and go to state 135


state 100

    (1) start -> KOTOBA ID func_start ENDSTMT declare startaux BEGIN func_begin_main block END .

    $end            reduce using rule 1 (start -> KOTOBA ID func_start ENDSTMT declare startaux BEGIN func_begin_main block END .)


state 101

    (17) decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC . func_declare_array declareaux
    (84) func_declare_array -> .

    ENDSTMT         reduce using rule 84 (func_declare_array -> .)
    COMA            reduce using rule 84 (func_declare_array -> .)

    func_declare_array             shift and go to state 136

state 102

    (26) cte -> ID func_constantID .

    CLOSEBRAC       reduce using rule 26 (cte -> ID func_constantID .)
    MULT            reduce using rule 26 (cte -> ID func_constantID .)
    DIV             reduce using rule 26 (cte -> ID func_constantID .)
    PLUS            reduce using rule 26 (cte -> ID func_constantID .)
    MINUS           reduce using rule 26 (cte -> ID func_constantID .)
    RELOP           reduce using rule 26 (cte -> ID func_constantID .)
    AND             reduce using rule 26 (cte -> ID func_constantID .)
    OR              reduce using rule 26 (cte -> ID func_constantID .)
    READ            reduce using rule 26 (cte -> ID func_constantID .)
    WRITE           reduce using rule 26 (cte -> ID func_constantID .)
    ID              reduce using rule 26 (cte -> ID func_constantID .)
    IF              reduce using rule 26 (cte -> ID func_constantID .)
    WHILE           reduce using rule 26 (cte -> ID func_constantID .)
    DO              reduce using rule 26 (cte -> ID func_constantID .)
    NOT             reduce using rule 26 (cte -> ID func_constantID .)
    OPENPAREN       reduce using rule 26 (cte -> ID func_constantID .)
    BOOLCTE         reduce using rule 26 (cte -> ID func_constantID .)
    NUMBERCTE       reduce using rule 26 (cte -> ID func_constantID .)
    WORDCTE         reduce using rule 26 (cte -> ID func_constantID .)
    SENTENCECTE     reduce using rule 26 (cte -> ID func_constantID .)
    CLOSECURL       reduce using rule 26 (cte -> ID func_constantID .)
    CLOSEPAREN      reduce using rule 26 (cte -> ID func_constantID .)
    RETURN          reduce using rule 26 (cte -> ID func_constantID .)
    ENDSTMT         reduce using rule 26 (cte -> ID func_constantID .)
    COMA            reduce using rule 26 (cte -> ID func_constantID .)


state 103

    (57) cycle -> DO block WHILE . OPENPAREN expression CLOSEPAREN ENDSTMT

    OPENPAREN       shift and go to state 137


state 104

    (29) cte -> WORDCTE func_constant func_wordCte .

    MULT            reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    DIV             reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    PLUS            reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    MINUS           reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    RELOP           reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    AND             reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    OR              reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    READ            reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    WRITE           reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    ID              reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    IF              reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    WHILE           reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    DO              reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    NOT             reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    OPENPAREN       reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    BOOLCTE         reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    NUMBERCTE       reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    WORDCTE         reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    SENTENCECTE     reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    RETURN          reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    ENDSTMT         reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    CLOSEBRAC       reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    CLOSECURL       reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    CLOSEPAREN      reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)
    COMA            reduce using rule 29 (cte -> WORDCTE func_constant func_wordCte .)


state 105

    (11) input -> READ OPENPAREN ID . func_read CLOSEPAREN ENDSTMT
    (95) func_read -> .

    CLOSEPAREN      reduce using rule 95 (func_read -> .)

    func_read                      shift and go to state 138

state 106

    (30) cte -> SENTENCECTE func_constant func_sentenceCte .

    MULT            reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    DIV             reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    PLUS            reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    MINUS           reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    RELOP           reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    AND             reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    OR              reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    READ            reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    WRITE           reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    ID              reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    IF              reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    WHILE           reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    DO              reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    NOT             reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    OPENPAREN       reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    BOOLCTE         reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    NUMBERCTE       reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    WORDCTE         reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    SENTENCECTE     reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    RETURN          reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    ENDSTMT         reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    CLOSEBRAC       reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    CLOSECURL       reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    CLOSEPAREN      reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)
    COMA            reduce using rule 30 (cte -> SENTENCECTE func_constant func_sentenceCte .)


state 107

    (52) factor -> OPENPAREN expression CLOSEPAREN .

    MULT            reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    DIV             reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    PLUS            reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    MINUS           reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    RELOP           reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    AND             reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    OR              reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    READ            reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    WRITE           reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    ID              reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    IF              reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    WHILE           reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    DO              reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    NOT             reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    OPENPAREN       reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    BOOLCTE         reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    NUMBERCTE       reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    WORDCTE         reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    SENTENCECTE     reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    CLOSECURL       reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    RETURN          reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    ENDSTMT         reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    COMA            reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)


state 108

    (27) cte -> BOOLCTE func_constant func_boolCte .

    MULT            reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    DIV             reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    PLUS            reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    MINUS           reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    RELOP           reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    AND             reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    OR              reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    READ            reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    WRITE           reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    ID              reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    IF              reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    WHILE           reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    DO              reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    NOT             reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    OPENPAREN       reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    BOOLCTE         reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    NUMBERCTE       reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    WORDCTE         reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    SENTENCECTE     reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    RETURN          reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    ENDSTMT         reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    CLOSEBRAC       reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    CLOSECURL       reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    CLOSEPAREN      reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)
    COMA            reduce using rule 27 (cte -> BOOLCTE func_constant func_boolCte .)


state 109

    (51) term -> factor DIV term .

    PLUS            reduce using rule 51 (term -> factor DIV term .)
    MINUS           reduce using rule 51 (term -> factor DIV term .)
    RELOP           reduce using rule 51 (term -> factor DIV term .)
    AND             reduce using rule 51 (term -> factor DIV term .)
    OR              reduce using rule 51 (term -> factor DIV term .)
    CLOSEPAREN      reduce using rule 51 (term -> factor DIV term .)
    READ            reduce using rule 51 (term -> factor DIV term .)
    WRITE           reduce using rule 51 (term -> factor DIV term .)
    ID              reduce using rule 51 (term -> factor DIV term .)
    IF              reduce using rule 51 (term -> factor DIV term .)
    WHILE           reduce using rule 51 (term -> factor DIV term .)
    DO              reduce using rule 51 (term -> factor DIV term .)
    NOT             reduce using rule 51 (term -> factor DIV term .)
    OPENPAREN       reduce using rule 51 (term -> factor DIV term .)
    BOOLCTE         reduce using rule 51 (term -> factor DIV term .)
    NUMBERCTE       reduce using rule 51 (term -> factor DIV term .)
    WORDCTE         reduce using rule 51 (term -> factor DIV term .)
    SENTENCECTE     reduce using rule 51 (term -> factor DIV term .)
    RETURN          reduce using rule 51 (term -> factor DIV term .)
    ENDSTMT         reduce using rule 51 (term -> factor DIV term .)
    COMA            reduce using rule 51 (term -> factor DIV term .)
    CLOSECURL       reduce using rule 51 (term -> factor DIV term .)


state 110

    (50) term -> factor MULT term .

    PLUS            reduce using rule 50 (term -> factor MULT term .)
    MINUS           reduce using rule 50 (term -> factor MULT term .)
    RELOP           reduce using rule 50 (term -> factor MULT term .)
    AND             reduce using rule 50 (term -> factor MULT term .)
    OR              reduce using rule 50 (term -> factor MULT term .)
    CLOSEPAREN      reduce using rule 50 (term -> factor MULT term .)
    READ            reduce using rule 50 (term -> factor MULT term .)
    WRITE           reduce using rule 50 (term -> factor MULT term .)
    ID              reduce using rule 50 (term -> factor MULT term .)
    IF              reduce using rule 50 (term -> factor MULT term .)
    WHILE           reduce using rule 50 (term -> factor MULT term .)
    DO              reduce using rule 50 (term -> factor MULT term .)
    NOT             reduce using rule 50 (term -> factor MULT term .)
    OPENPAREN       reduce using rule 50 (term -> factor MULT term .)
    BOOLCTE         reduce using rule 50 (term -> factor MULT term .)
    NUMBERCTE       reduce using rule 50 (term -> factor MULT term .)
    WORDCTE         reduce using rule 50 (term -> factor MULT term .)
    SENTENCECTE     reduce using rule 50 (term -> factor MULT term .)
    RETURN          reduce using rule 50 (term -> factor MULT term .)
    ENDSTMT         reduce using rule 50 (term -> factor MULT term .)
    COMA            reduce using rule 50 (term -> factor MULT term .)
    CLOSECURL       reduce using rule 50 (term -> factor MULT term .)


state 111

    (54) condition -> IF OPENPAREN expression . CLOSEPAREN block
    (55) condition -> IF OPENPAREN expression . CLOSEPAREN block ELSE block

    CLOSEPAREN      shift and go to state 139


state 112

    (12) output -> WRITE OPENPAREN outputaux . CLOSEPAREN ENDSTMT

    CLOSEPAREN      shift and go to state 140


state 113

    (13) outputaux -> expression . func_print
    (14) outputaux -> expression . func_print COMA outputaux
    (96) func_print -> .

    COMA            reduce using rule 96 (func_print -> .)
    CLOSEPAREN      reduce using rule 96 (func_print -> .)

    func_print                     shift and go to state 141

state 114

    (41) expression -> relopexpression AND expression .

    CLOSEPAREN      reduce using rule 41 (expression -> relopexpression AND expression .)
    READ            reduce using rule 41 (expression -> relopexpression AND expression .)
    WRITE           reduce using rule 41 (expression -> relopexpression AND expression .)
    ID              reduce using rule 41 (expression -> relopexpression AND expression .)
    IF              reduce using rule 41 (expression -> relopexpression AND expression .)
    WHILE           reduce using rule 41 (expression -> relopexpression AND expression .)
    DO              reduce using rule 41 (expression -> relopexpression AND expression .)
    NOT             reduce using rule 41 (expression -> relopexpression AND expression .)
    OPENPAREN       reduce using rule 41 (expression -> relopexpression AND expression .)
    BOOLCTE         reduce using rule 41 (expression -> relopexpression AND expression .)
    NUMBERCTE       reduce using rule 41 (expression -> relopexpression AND expression .)
    WORDCTE         reduce using rule 41 (expression -> relopexpression AND expression .)
    SENTENCECTE     reduce using rule 41 (expression -> relopexpression AND expression .)
    RETURN          reduce using rule 41 (expression -> relopexpression AND expression .)
    ENDSTMT         reduce using rule 41 (expression -> relopexpression AND expression .)
    CLOSECURL       reduce using rule 41 (expression -> relopexpression AND expression .)
    COMA            reduce using rule 41 (expression -> relopexpression AND expression .)


state 115

    (42) expression -> relopexpression OR expression .

    CLOSEPAREN      reduce using rule 42 (expression -> relopexpression OR expression .)
    READ            reduce using rule 42 (expression -> relopexpression OR expression .)
    WRITE           reduce using rule 42 (expression -> relopexpression OR expression .)
    ID              reduce using rule 42 (expression -> relopexpression OR expression .)
    IF              reduce using rule 42 (expression -> relopexpression OR expression .)
    WHILE           reduce using rule 42 (expression -> relopexpression OR expression .)
    DO              reduce using rule 42 (expression -> relopexpression OR expression .)
    NOT             reduce using rule 42 (expression -> relopexpression OR expression .)
    OPENPAREN       reduce using rule 42 (expression -> relopexpression OR expression .)
    BOOLCTE         reduce using rule 42 (expression -> relopexpression OR expression .)
    NUMBERCTE       reduce using rule 42 (expression -> relopexpression OR expression .)
    WORDCTE         reduce using rule 42 (expression -> relopexpression OR expression .)
    SENTENCECTE     reduce using rule 42 (expression -> relopexpression OR expression .)
    RETURN          reduce using rule 42 (expression -> relopexpression OR expression .)
    ENDSTMT         reduce using rule 42 (expression -> relopexpression OR expression .)
    CLOSECURL       reduce using rule 42 (expression -> relopexpression OR expression .)
    COMA            reduce using rule 42 (expression -> relopexpression OR expression .)


state 116

    (28) cte -> NUMBERCTE func_constant func_numberCte .

    MULT            reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    DIV             reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    PLUS            reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    MINUS           reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    RELOP           reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    AND             reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    OR              reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    READ            reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    WRITE           reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    ID              reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    IF              reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    WHILE           reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    DO              reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    NOT             reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    OPENPAREN       reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    BOOLCTE         reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    NUMBERCTE       reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    WORDCTE         reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    SENTENCECTE     reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    RETURN          reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    ENDSTMT         reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    CLOSEBRAC       reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    CLOSECURL       reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    CLOSEPAREN      reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)
    COMA            reduce using rule 28 (cte -> NUMBERCTE func_constant func_numberCte .)


state 117

    (21) assign -> ID func_constantID OPENBRAC . func_isSize cte CLOSEBRAC EQUAL func_assign assignaux
    (85) func_isSize -> .

    ID              reduce using rule 85 (func_isSize -> .)
    BOOLCTE         reduce using rule 85 (func_isSize -> .)
    NUMBERCTE       reduce using rule 85 (func_isSize -> .)
    WORDCTE         reduce using rule 85 (func_isSize -> .)
    SENTENCECTE     reduce using rule 85 (func_isSize -> .)

    func_isSize                    shift and go to state 142

state 118

    (20) assign -> ID func_constantID EQUAL . func_assign assignaux
    (97) func_assign -> .

    OPENCURL        reduce using rule 97 (func_assign -> .)
    OPENPAREN       reduce using rule 97 (func_assign -> .)
    ID              reduce using rule 97 (func_assign -> .)
    BOOLCTE         reduce using rule 97 (func_assign -> .)
    NUMBERCTE       reduce using rule 97 (func_assign -> .)
    WORDCTE         reduce using rule 97 (func_assign -> .)
    SENTENCECTE     reduce using rule 97 (func_assign -> .)

    func_assign                    shift and go to state 143

state 119

    (80) special -> REMOVE .

    OPENPAREN       reduce using rule 80 (special -> REMOVE .)


state 120

    (73) special -> SEARCH .

    OPENPAREN       reduce using rule 73 (special -> SEARCH .)


state 121

    (74) special -> EXISTS .

    OPENPAREN       reduce using rule 74 (special -> EXISTS .)


state 122

    (78) special -> WORDCOUNT .

    OPENPAREN       reduce using rule 78 (special -> WORDCOUNT .)


state 123

    (76) special -> MEDIAN .

    OPENPAREN       reduce using rule 76 (special -> MEDIAN .)


state 124

    (79) special -> TOKENIZE .

    OPENPAREN       reduce using rule 79 (special -> TOKENIZE .)


state 125

    (71) special -> LENGTH .

    OPENPAREN       reduce using rule 71 (special -> LENGTH .)


state 126

    (72) special -> FREQUENCY .

    OPENPAREN       reduce using rule 72 (special -> FREQUENCY .)


state 127

    (77) special -> MODE .

    OPENPAREN       reduce using rule 77 (special -> MODE .)


state 128

    (68) specialfunction -> ID DOT special . OPENPAREN spaux CLOSEPAREN ENDSTMT

    OPENPAREN       shift and go to state 144


state 129

    (75) special -> MEAN .

    OPENPAREN       reduce using rule 75 (special -> MEAN .)


state 130

    (47) exp -> term PLUS exp .

    ENDSTMT         reduce using rule 47 (exp -> term PLUS exp .)
    RELOP           reduce using rule 47 (exp -> term PLUS exp .)
    AND             reduce using rule 47 (exp -> term PLUS exp .)
    OR              reduce using rule 47 (exp -> term PLUS exp .)
    READ            reduce using rule 47 (exp -> term PLUS exp .)
    WRITE           reduce using rule 47 (exp -> term PLUS exp .)
    ID              reduce using rule 47 (exp -> term PLUS exp .)
    IF              reduce using rule 47 (exp -> term PLUS exp .)
    WHILE           reduce using rule 47 (exp -> term PLUS exp .)
    DO              reduce using rule 47 (exp -> term PLUS exp .)
    NOT             reduce using rule 47 (exp -> term PLUS exp .)
    OPENPAREN       reduce using rule 47 (exp -> term PLUS exp .)
    BOOLCTE         reduce using rule 47 (exp -> term PLUS exp .)
    NUMBERCTE       reduce using rule 47 (exp -> term PLUS exp .)
    WORDCTE         reduce using rule 47 (exp -> term PLUS exp .)
    SENTENCECTE     reduce using rule 47 (exp -> term PLUS exp .)
    CLOSECURL       reduce using rule 47 (exp -> term PLUS exp .)
    CLOSEPAREN      reduce using rule 47 (exp -> term PLUS exp .)
    RETURN          reduce using rule 47 (exp -> term PLUS exp .)
    COMA            reduce using rule 47 (exp -> term PLUS exp .)


state 131

    (48) exp -> term MINUS exp .

    ENDSTMT         reduce using rule 48 (exp -> term MINUS exp .)
    RELOP           reduce using rule 48 (exp -> term MINUS exp .)
    AND             reduce using rule 48 (exp -> term MINUS exp .)
    OR              reduce using rule 48 (exp -> term MINUS exp .)
    READ            reduce using rule 48 (exp -> term MINUS exp .)
    WRITE           reduce using rule 48 (exp -> term MINUS exp .)
    ID              reduce using rule 48 (exp -> term MINUS exp .)
    IF              reduce using rule 48 (exp -> term MINUS exp .)
    WHILE           reduce using rule 48 (exp -> term MINUS exp .)
    DO              reduce using rule 48 (exp -> term MINUS exp .)
    NOT             reduce using rule 48 (exp -> term MINUS exp .)
    OPENPAREN       reduce using rule 48 (exp -> term MINUS exp .)
    BOOLCTE         reduce using rule 48 (exp -> term MINUS exp .)
    NUMBERCTE       reduce using rule 48 (exp -> term MINUS exp .)
    WORDCTE         reduce using rule 48 (exp -> term MINUS exp .)
    SENTENCECTE     reduce using rule 48 (exp -> term MINUS exp .)
    CLOSECURL       reduce using rule 48 (exp -> term MINUS exp .)
    CLOSEPAREN      reduce using rule 48 (exp -> term MINUS exp .)
    RETURN          reduce using rule 48 (exp -> term MINUS exp .)
    COMA            reduce using rule 48 (exp -> term MINUS exp .)


state 132

    (56) cycle -> WHILE OPENPAREN expression . CLOSEPAREN block

    CLOSEPAREN      shift and go to state 145


state 133

    (44) relopexpression -> exp RELOP exp .

    AND             reduce using rule 44 (relopexpression -> exp RELOP exp .)
    OR              reduce using rule 44 (relopexpression -> exp RELOP exp .)
    CLOSEPAREN      reduce using rule 44 (relopexpression -> exp RELOP exp .)
    READ            reduce using rule 44 (relopexpression -> exp RELOP exp .)
    WRITE           reduce using rule 44 (relopexpression -> exp RELOP exp .)
    ID              reduce using rule 44 (relopexpression -> exp RELOP exp .)
    IF              reduce using rule 44 (relopexpression -> exp RELOP exp .)
    WHILE           reduce using rule 44 (relopexpression -> exp RELOP exp .)
    DO              reduce using rule 44 (relopexpression -> exp RELOP exp .)
    NOT             reduce using rule 44 (relopexpression -> exp RELOP exp .)
    OPENPAREN       reduce using rule 44 (relopexpression -> exp RELOP exp .)
    BOOLCTE         reduce using rule 44 (relopexpression -> exp RELOP exp .)
    NUMBERCTE       reduce using rule 44 (relopexpression -> exp RELOP exp .)
    WORDCTE         reduce using rule 44 (relopexpression -> exp RELOP exp .)
    SENTENCECTE     reduce using rule 44 (relopexpression -> exp RELOP exp .)
    CLOSECURL       reduce using rule 44 (relopexpression -> exp RELOP exp .)
    COMA            reduce using rule 44 (relopexpression -> exp RELOP exp .)
    RETURN          reduce using rule 44 (relopexpression -> exp RELOP exp .)
    ENDSTMT         reduce using rule 44 (relopexpression -> exp RELOP exp .)


state 134

    (62) parameter -> type ID . func_declare_var parameteraux
    (63) parameter -> type ID . OPENBRAC func_isSize cte CLOSEBRAC func_declare_array parameteraux
    (83) func_declare_var -> .

    OPENBRAC        shift and go to state 146
    COMA            reduce using rule 83 (func_declare_var -> .)
    CLOSEPAREN      reduce using rule 83 (func_declare_var -> .)

    func_declare_var               shift and go to state 147

state 135

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN . OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN . OPENCURL blockaux returnaux ENDSTMT CLOSECURL

    OPENCURL        shift and go to state 148


state 136

    (17) decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array . declareaux
    (18) declareaux -> . ENDSTMT
    (19) declareaux -> . COMA decaux

    ENDSTMT         shift and go to state 39
    COMA            shift and go to state 40

    declareaux                     shift and go to state 149

state 137

    (57) cycle -> DO block WHILE OPENPAREN . expression CLOSEPAREN ENDSTMT
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 65
    factor                         shift and go to state 49
    relopexpression                shift and go to state 56
    expression                     shift and go to state 150

state 138

    (11) input -> READ OPENPAREN ID func_read . CLOSEPAREN ENDSTMT

    CLOSEPAREN      shift and go to state 151


state 139

    (54) condition -> IF OPENPAREN expression CLOSEPAREN . block
    (55) condition -> IF OPENPAREN expression CLOSEPAREN . block ELSE block
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 34

    block                          shift and go to state 152

state 140

    (12) output -> WRITE OPENPAREN outputaux CLOSEPAREN . ENDSTMT

    ENDSTMT         shift and go to state 153


state 141

    (13) outputaux -> expression func_print .
    (14) outputaux -> expression func_print . COMA outputaux

    CLOSEPAREN      reduce using rule 13 (outputaux -> expression func_print .)
    COMA            shift and go to state 154


state 142

    (21) assign -> ID func_constantID OPENBRAC func_isSize . cte CLOSEBRAC EQUAL func_assign assignaux
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    cte                            shift and go to state 155

state 143

    (20) assign -> ID func_constantID EQUAL func_assign . assignaux
    (22) assignaux -> . exp ENDSTMT
    (23) assignaux -> . OPENCURL assiaux CLOSECURL ENDSTMT
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENCURL        shift and go to state 156
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 158
    factor                         shift and go to state 49
    assignaux                      shift and go to state 157

state 144

    (68) specialfunction -> ID DOT special OPENPAREN . spaux CLOSEPAREN ENDSTMT
    (69) spaux -> . cte
    (70) spaux -> . empty
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte
    (81) empty -> .

    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45
    CLOSEPAREN      reduce using rule 81 (empty -> .)

    spaux                          shift and go to state 159
    cte                            shift and go to state 160
    empty                          shift and go to state 161

state 145

    (56) cycle -> WHILE OPENPAREN expression CLOSEPAREN . block
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 34

    block                          shift and go to state 162

state 146

    (63) parameter -> type ID OPENBRAC . func_isSize cte CLOSEBRAC func_declare_array parameteraux
    (85) func_isSize -> .

    ID              reduce using rule 85 (func_isSize -> .)
    BOOLCTE         reduce using rule 85 (func_isSize -> .)
    NUMBERCTE       reduce using rule 85 (func_isSize -> .)
    WORDCTE         reduce using rule 85 (func_isSize -> .)
    SENTENCECTE     reduce using rule 85 (func_isSize -> .)

    func_isSize                    shift and go to state 163

state 147

    (62) parameter -> type ID func_declare_var . parameteraux
    (64) parameteraux -> . COMA parameter
    (65) parameteraux -> . empty
    (81) empty -> .

    COMA            shift and go to state 164
    CLOSEPAREN      reduce using rule 81 (empty -> .)

    parameteraux                   shift and go to state 165
    empty                          shift and go to state 166

state 148

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL . declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL . blockaux returnaux ENDSTMT CLOSECURL
    (15) declare -> . DEC decaux
    (6) blockaux -> . action blockaux
    (7) blockaux -> . empty
    (8) action -> . input
    (9) action -> . output
    (10) action -> . statement
    (81) empty -> .
    (11) input -> . READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT
    (12) output -> . WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
    (35) statement -> . assign
    (36) statement -> . expression
    (37) statement -> . condition
    (38) statement -> . cycle
    (39) statement -> . specialfunction
    (20) assign -> . ID func_constantID EQUAL func_assign assignaux
    (21) assign -> . ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (54) condition -> . IF OPENPAREN expression CLOSEPAREN block
    (55) condition -> . IF OPENPAREN expression CLOSEPAREN block ELSE block
    (56) cycle -> . WHILE OPENPAREN expression CLOSEPAREN block
    (57) cycle -> . DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (68) specialfunction -> . ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    DEC             shift and go to state 6
    RETURN          reduce using rule 81 (empty -> .)
    ENDSTMT         reduce using rule 81 (empty -> .)
    READ            shift and go to state 44
    WRITE           shift and go to state 54
    ID              shift and go to state 58
    IF              shift and go to state 51
    WHILE           shift and go to state 63
    DO              shift and go to state 42
    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    statement                      shift and go to state 48
    factor                         shift and go to state 49
    input                          shift and go to state 50
    blockaux                       shift and go to state 167
    relopexpression                shift and go to state 56
    condition                      shift and go to state 59
    cycle                          shift and go to state 60
    term                           shift and go to state 61
    specialfunction                shift and go to state 62
    expression                     shift and go to state 68
    declare                        shift and go to state 168
    cte                            shift and go to state 64
    empty                          shift and go to state 52
    exp                            shift and go to state 65
    action                         shift and go to state 66
    output                         shift and go to state 67
    assign                         shift and go to state 69

state 149

    (17) decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .

    FUNC            reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    BEGIN           reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    READ            reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    WRITE           reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    ID              reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    IF              reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    WHILE           reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    DO              reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    NOT             reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    OPENPAREN       reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    BOOLCTE         reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    NUMBERCTE       reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    WORDCTE         reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    SENTENCECTE     reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    RETURN          reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)
    ENDSTMT         reduce using rule 17 (decaux -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array declareaux .)


state 150

    (57) cycle -> DO block WHILE OPENPAREN expression . CLOSEPAREN ENDSTMT

    CLOSEPAREN      shift and go to state 169


state 151

    (11) input -> READ OPENPAREN ID func_read CLOSEPAREN . ENDSTMT

    ENDSTMT         shift and go to state 170


state 152

    (54) condition -> IF OPENPAREN expression CLOSEPAREN block .
    (55) condition -> IF OPENPAREN expression CLOSEPAREN block . ELSE block

    READ            reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    WRITE           reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    ID              reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    IF              reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    WHILE           reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    DO              reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    NOT             reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    OPENPAREN       reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    BOOLCTE         reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    NUMBERCTE       reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    WORDCTE         reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    SENTENCECTE     reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    RETURN          reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    ENDSTMT         reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    CLOSECURL       reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    ELSE            shift and go to state 171


state 153

    (12) output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .

    READ            reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    WRITE           reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    ID              reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    IF              reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    WHILE           reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    DO              reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    NOT             reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    OPENPAREN       reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    BOOLCTE         reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    NUMBERCTE       reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    WORDCTE         reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    SENTENCECTE     reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    RETURN          reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    ENDSTMT         reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    CLOSECURL       reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)


state 154

    (14) outputaux -> expression func_print COMA . outputaux
    (13) outputaux -> . expression func_print
    (14) outputaux -> . expression func_print COMA outputaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    outputaux                      shift and go to state 172
    exp                            shift and go to state 65
    factor                         shift and go to state 49
    relopexpression                shift and go to state 56
    expression                     shift and go to state 113

state 155

    (21) assign -> ID func_constantID OPENBRAC func_isSize cte . CLOSEBRAC EQUAL func_assign assignaux

    CLOSEBRAC       shift and go to state 173


state 156

    (23) assignaux -> OPENCURL . assiaux CLOSECURL ENDSTMT
    (24) assiaux -> . exp
    (25) assiaux -> . exp COMA assiaux
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 175
    factor                         shift and go to state 49
    assiaux                        shift and go to state 174

state 157

    (20) assign -> ID func_constantID EQUAL func_assign assignaux .

    READ            reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    WRITE           reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    ID              reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    IF              reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    WHILE           reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    DO              reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    NOT             reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    OPENPAREN       reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    BOOLCTE         reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    NUMBERCTE       reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    WORDCTE         reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    SENTENCECTE     reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    CLOSECURL       reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    RETURN          reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)
    ENDSTMT         reduce using rule 20 (assign -> ID func_constantID EQUAL func_assign assignaux .)


state 158

    (22) assignaux -> exp . ENDSTMT

    ENDSTMT         shift and go to state 176


state 159

    (68) specialfunction -> ID DOT special OPENPAREN spaux . CLOSEPAREN ENDSTMT

    CLOSEPAREN      shift and go to state 177


state 160

    (69) spaux -> cte .

    CLOSEPAREN      reduce using rule 69 (spaux -> cte .)


state 161

    (70) spaux -> empty .

    CLOSEPAREN      reduce using rule 70 (spaux -> empty .)


state 162

    (56) cycle -> WHILE OPENPAREN expression CLOSEPAREN block .

    READ            reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    WRITE           reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    ID              reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    IF              reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    WHILE           reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    DO              reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    NOT             reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    OPENPAREN       reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    BOOLCTE         reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    NUMBERCTE       reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    WORDCTE         reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    SENTENCECTE     reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    CLOSECURL       reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    RETURN          reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    ENDSTMT         reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)


state 163

    (63) parameter -> type ID OPENBRAC func_isSize . cte CLOSEBRAC func_declare_array parameteraux
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    cte                            shift and go to state 178

state 164

    (64) parameteraux -> COMA . parameter
    (62) parameter -> . type ID func_declare_var parameteraux
    (63) parameter -> . type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array parameteraux
    (31) type -> . BOOL func_type
    (32) type -> . NUMBER func_type
    (33) type -> . WORD func_type
    (34) type -> . SENTENCE func_type

    BOOL            shift and go to state 14
    NUMBER          shift and go to state 13
    WORD            shift and go to state 16
    SENTENCE        shift and go to state 12

    parameter                      shift and go to state 179
    type                           shift and go to state 98

state 165

    (62) parameter -> type ID func_declare_var parameteraux .

    CLOSEPAREN      reduce using rule 62 (parameter -> type ID func_declare_var parameteraux .)


state 166

    (65) parameteraux -> empty .

    CLOSEPAREN      reduce using rule 65 (parameteraux -> empty .)


state 167

    (59) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux . returnaux ENDSTMT CLOSECURL
    (66) returnaux -> . RETURN ID
    (67) returnaux -> . empty
    (81) empty -> .

    RETURN          shift and go to state 180
    ENDSTMT         reduce using rule 81 (empty -> .)

    returnaux                      shift and go to state 181
    empty                          shift and go to state 182

state 168

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare . blockaux returnaux ENDSTMT CLOSECURL
    (6) blockaux -> . action blockaux
    (7) blockaux -> . empty
    (8) action -> . input
    (9) action -> . output
    (10) action -> . statement
    (81) empty -> .
    (11) input -> . READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT
    (12) output -> . WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
    (35) statement -> . assign
    (36) statement -> . expression
    (37) statement -> . condition
    (38) statement -> . cycle
    (39) statement -> . specialfunction
    (20) assign -> . ID func_constantID EQUAL func_assign assignaux
    (21) assign -> . ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (54) condition -> . IF OPENPAREN expression CLOSEPAREN block
    (55) condition -> . IF OPENPAREN expression CLOSEPAREN block ELSE block
    (56) cycle -> . WHILE OPENPAREN expression CLOSEPAREN block
    (57) cycle -> . DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (68) specialfunction -> . ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    RETURN          reduce using rule 81 (empty -> .)
    ENDSTMT         reduce using rule 81 (empty -> .)
    READ            shift and go to state 44
    WRITE           shift and go to state 54
    ID              shift and go to state 58
    IF              shift and go to state 51
    WHILE           shift and go to state 63
    DO              shift and go to state 42
    NOT             shift and go to state 55
    OPENPAREN       shift and go to state 46
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    statement                      shift and go to state 48
    factor                         shift and go to state 49
    input                          shift and go to state 50
    blockaux                       shift and go to state 183
    relopexpression                shift and go to state 56
    condition                      shift and go to state 59
    cycle                          shift and go to state 60
    term                           shift and go to state 61
    specialfunction                shift and go to state 62
    expression                     shift and go to state 68
    cte                            shift and go to state 64
    empty                          shift and go to state 52
    exp                            shift and go to state 65
    action                         shift and go to state 66
    output                         shift and go to state 67
    assign                         shift and go to state 69

state 169

    (57) cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN . ENDSTMT

    ENDSTMT         shift and go to state 184


state 170

    (11) input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .

    READ            reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    WRITE           reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    ID              reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    IF              reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    WHILE           reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    DO              reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    NOT             reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    OPENPAREN       reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    BOOLCTE         reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    NUMBERCTE       reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    WORDCTE         reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    SENTENCECTE     reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    CLOSECURL       reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    RETURN          reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)
    ENDSTMT         reduce using rule 11 (input -> READ OPENPAREN ID func_read CLOSEPAREN ENDSTMT .)


state 171

    (55) condition -> IF OPENPAREN expression CLOSEPAREN block ELSE . block
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 34

    block                          shift and go to state 185

state 172

    (14) outputaux -> expression func_print COMA outputaux .

    CLOSEPAREN      reduce using rule 14 (outputaux -> expression func_print COMA outputaux .)


state 173

    (21) assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC . EQUAL func_assign assignaux

    EQUAL           shift and go to state 186


state 174

    (23) assignaux -> OPENCURL assiaux . CLOSECURL ENDSTMT

    CLOSECURL       shift and go to state 187


state 175

    (24) assiaux -> exp .
    (25) assiaux -> exp . COMA assiaux

    CLOSECURL       reduce using rule 24 (assiaux -> exp .)
    COMA            shift and go to state 188


state 176

    (22) assignaux -> exp ENDSTMT .

    READ            reduce using rule 22 (assignaux -> exp ENDSTMT .)
    WRITE           reduce using rule 22 (assignaux -> exp ENDSTMT .)
    ID              reduce using rule 22 (assignaux -> exp ENDSTMT .)
    IF              reduce using rule 22 (assignaux -> exp ENDSTMT .)
    WHILE           reduce using rule 22 (assignaux -> exp ENDSTMT .)
    DO              reduce using rule 22 (assignaux -> exp ENDSTMT .)
    NOT             reduce using rule 22 (assignaux -> exp ENDSTMT .)
    OPENPAREN       reduce using rule 22 (assignaux -> exp ENDSTMT .)
    BOOLCTE         reduce using rule 22 (assignaux -> exp ENDSTMT .)
    NUMBERCTE       reduce using rule 22 (assignaux -> exp ENDSTMT .)
    WORDCTE         reduce using rule 22 (assignaux -> exp ENDSTMT .)
    SENTENCECTE     reduce using rule 22 (assignaux -> exp ENDSTMT .)
    CLOSECURL       reduce using rule 22 (assignaux -> exp ENDSTMT .)
    RETURN          reduce using rule 22 (assignaux -> exp ENDSTMT .)
    ENDSTMT         reduce using rule 22 (assignaux -> exp ENDSTMT .)


state 177

    (68) specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN . ENDSTMT

    ENDSTMT         shift and go to state 189


state 178

    (63) parameter -> type ID OPENBRAC func_isSize cte . CLOSEBRAC func_declare_array parameteraux

    CLOSEBRAC       shift and go to state 190


state 179

    (64) parameteraux -> COMA parameter .

    CLOSEPAREN      reduce using rule 64 (parameteraux -> COMA parameter .)


state 180

    (66) returnaux -> RETURN . ID

    ID              shift and go to state 191


state 181

    (59) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux . ENDSTMT CLOSECURL

    ENDSTMT         shift and go to state 192


state 182

    (67) returnaux -> empty .

    ENDSTMT         reduce using rule 67 (returnaux -> empty .)


state 183

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux . returnaux ENDSTMT CLOSECURL
    (66) returnaux -> . RETURN ID
    (67) returnaux -> . empty
    (81) empty -> .

    RETURN          shift and go to state 180
    ENDSTMT         reduce using rule 81 (empty -> .)

    returnaux                      shift and go to state 193
    empty                          shift and go to state 182

state 184

    (57) cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .

    READ            reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    WRITE           reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    ID              reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    IF              reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    WHILE           reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    DO              reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    NOT             reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    OPENPAREN       reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    BOOLCTE         reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    NUMBERCTE       reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    WORDCTE         reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    SENTENCECTE     reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    CLOSECURL       reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    RETURN          reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    ENDSTMT         reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)


state 185

    (55) condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .

    READ            reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    WRITE           reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    ID              reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    IF              reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    WHILE           reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    DO              reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    NOT             reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    OPENPAREN       reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    BOOLCTE         reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    NUMBERCTE       reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    WORDCTE         reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    SENTENCECTE     reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    RETURN          reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    ENDSTMT         reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    CLOSECURL       reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)


state 186

    (21) assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL . func_assign assignaux
    (97) func_assign -> .

    OPENCURL        reduce using rule 97 (func_assign -> .)
    OPENPAREN       reduce using rule 97 (func_assign -> .)
    ID              reduce using rule 97 (func_assign -> .)
    BOOLCTE         reduce using rule 97 (func_assign -> .)
    NUMBERCTE       reduce using rule 97 (func_assign -> .)
    WORDCTE         reduce using rule 97 (func_assign -> .)
    SENTENCECTE     reduce using rule 97 (func_assign -> .)

    func_assign                    shift and go to state 194

state 187

    (23) assignaux -> OPENCURL assiaux CLOSECURL . ENDSTMT

    ENDSTMT         shift and go to state 195


state 188

    (25) assiaux -> exp COMA . assiaux
    (24) assiaux -> . exp
    (25) assiaux -> . exp COMA assiaux
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    cte                            shift and go to state 64
    exp                            shift and go to state 175
    factor                         shift and go to state 49
    assiaux                        shift and go to state 196

state 189

    (68) specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .

    READ            reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    WRITE           reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    ID              reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    IF              reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    WHILE           reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    DO              reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    NOT             reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    OPENPAREN       reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    BOOLCTE         reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    NUMBERCTE       reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    WORDCTE         reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    SENTENCECTE     reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    CLOSECURL       reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    RETURN          reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    ENDSTMT         reduce using rule 68 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)


state 190

    (63) parameter -> type ID OPENBRAC func_isSize cte CLOSEBRAC . func_declare_array parameteraux
    (84) func_declare_array -> .

    COMA            reduce using rule 84 (func_declare_array -> .)
    CLOSEPAREN      reduce using rule 84 (func_declare_array -> .)

    func_declare_array             shift and go to state 197

state 191

    (66) returnaux -> RETURN ID .

    ENDSTMT         reduce using rule 66 (returnaux -> RETURN ID .)


state 192

    (59) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT . CLOSECURL

    CLOSECURL       shift and go to state 198


state 193

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux . ENDSTMT CLOSECURL

    ENDSTMT         shift and go to state 199


state 194

    (21) assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign . assignaux
    (22) assignaux -> . exp ENDSTMT
    (23) assignaux -> . OPENCURL assiaux CLOSECURL ENDSTMT
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID func_constantID
    (27) cte -> . BOOLCTE func_constant func_boolCte
    (28) cte -> . NUMBERCTE func_constant func_numberCte
    (29) cte -> . WORDCTE func_constant func_wordCte
    (30) cte -> . SENTENCECTE func_constant func_sentenceCte

    OPENCURL        shift and go to state 156
    OPENPAREN       shift and go to state 46
    ID              shift and go to state 74
    BOOLCTE         shift and go to state 47
    NUMBERCTE       shift and go to state 57
    WORDCTE         shift and go to state 43
    SENTENCECTE     shift and go to state 45

    term                           shift and go to state 61
    factor                         shift and go to state 49
    cte                            shift and go to state 64
    exp                            shift and go to state 158
    assignaux                      shift and go to state 200

state 195

    (23) assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .

    READ            reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    WRITE           reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    ID              reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    IF              reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    WHILE           reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    DO              reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    NOT             reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    OPENPAREN       reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    BOOLCTE         reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    NUMBERCTE       reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    WORDCTE         reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    SENTENCECTE     reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    CLOSECURL       reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    RETURN          reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    ENDSTMT         reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)


state 196

    (25) assiaux -> exp COMA assiaux .

    CLOSECURL       reduce using rule 25 (assiaux -> exp COMA assiaux .)


state 197

    (63) parameter -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array . parameteraux
    (64) parameteraux -> . COMA parameter
    (65) parameteraux -> . empty
    (81) empty -> .

    COMA            shift and go to state 164
    CLOSEPAREN      reduce using rule 81 (empty -> .)

    parameteraux                   shift and go to state 201
    empty                          shift and go to state 166

state 198

    (59) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL .

    FUNC            reduce using rule 59 (function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL .)
    BEGIN           reduce using rule 59 (function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL .)


state 199

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT . CLOSECURL

    CLOSECURL       shift and go to state 202


state 200

    (21) assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .

    READ            reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    WRITE           reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    ID              reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    IF              reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    WHILE           reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    DO              reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    NOT             reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    OPENPAREN       reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    BOOLCTE         reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    NUMBERCTE       reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    WORDCTE         reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    SENTENCECTE     reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    CLOSECURL       reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    RETURN          reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)
    ENDSTMT         reduce using rule 21 (assign -> ID func_constantID OPENBRAC func_isSize cte CLOSEBRAC EQUAL func_assign assignaux .)


state 201

    (63) parameter -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array parameteraux .

    CLOSEPAREN      reduce using rule 63 (parameter -> type ID OPENBRAC func_isSize cte CLOSEBRAC func_declare_array parameteraux .)


state 202

    (58) function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL .

    FUNC            reduce using rule 58 (function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL .)
    BEGIN           reduce using rule 58 (function -> FUNC funcaux ID func_declare_function OPENPAREN parameter CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL .)

