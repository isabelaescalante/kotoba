Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> KOTOBA ID ENDSTMT declare startaux BEGIN block END
Rule 2     start -> KOTOBA ID ENDSTMT startaux BEGIN block END
Rule 3     startaux -> function startaux
Rule 4     startaux -> empty
Rule 5     block -> OPENCURL blockaux CLOSECURL
Rule 6     blockaux -> action blockaux
Rule 7     blockaux -> empty
Rule 8     action -> input
Rule 9     action -> output
Rule 10    action -> statement
Rule 11    input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT
Rule 12    output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
Rule 13    outputaux -> expression
Rule 14    outputaux -> expression COMA outputaux
Rule 15    declare -> DEC decaux
Rule 16    decaux -> type ID declareaux
Rule 17    decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux
Rule 18    declareaux -> ENDSTMT
Rule 19    declareaux -> COMA decaux
Rule 20    assign -> ID EQUAL assignaux
Rule 21    assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux
Rule 22    assignaux -> exp ENDSTMT
Rule 23    assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT
Rule 24    assiaux -> exp
Rule 25    assiaux -> exp COMA assiaux
Rule 26    cte -> ID
Rule 27    cte -> BOOLCTE
Rule 28    cte -> NUMBERCTE
Rule 29    cte -> WORDCTE
Rule 30    cte -> SENTENCECTE
Rule 31    type -> BOOL
Rule 32    type -> NUMBER
Rule 33    type -> WORD
Rule 34    type -> SENTENCE
Rule 35    statement -> assign
Rule 36    statement -> expression
Rule 37    statement -> condition
Rule 38    statement -> cycle
Rule 39    statement -> specialfunction
Rule 40    expression -> relopexpression
Rule 41    expression -> relopexpression AND expression
Rule 42    expression -> relopexpression OR expression
Rule 43    relopexpression -> exp
Rule 44    relopexpression -> exp RELOP exp
Rule 45    relopexpression -> NOT exp
Rule 46    exp -> term
Rule 47    exp -> term PLUS exp
Rule 48    exp -> term MINUS exp
Rule 49    term -> factor
Rule 50    term -> factor MULT term
Rule 51    term -> factor DIV term
Rule 52    factor -> OPENPAREN expression CLOSEPAREN
Rule 53    factor -> cte
Rule 54    condition -> IF OPENPAREN expression CLOSEPAREN block
Rule 55    condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block
Rule 56    cycle -> WHILE OPENPAREN expression CLOSEPAREN block
Rule 57    cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
Rule 58    function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
Rule 59    function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
Rule 60    funcaux -> type
Rule 61    funcaux -> VOID
Rule 62    parameteraux -> type ID
Rule 63    parameteraux -> type ID COMA parameteraux
Rule 64    parameteraux -> empty
Rule 65    returnaux -> RETURN ID
Rule 66    returnaux -> empty
Rule 67    specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
Rule 68    spaux -> cte
Rule 69    spaux -> empty
Rule 70    special -> LENGTH
Rule 71    special -> FREQUENCY
Rule 72    special -> SEARCH
Rule 73    special -> EXISTS
Rule 74    special -> MEAN
Rule 75    special -> MEDIAN
Rule 76    special -> MODE
Rule 77    special -> WORDCOUNT
Rule 78    special -> TOKENIZE
Rule 79    special -> REMOVE
Rule 80    empty -> <empty>

Terminals, with rules where they appear

AND                  : 41
BEGIN                : 1 2
BOOL                 : 31
BOOLCTE              : 27
CLOSEBRAC            : 17 21
CLOSECURL            : 5 23 58 59
CLOSEPAREN           : 11 12 52 54 55 56 57 58 59 67
COMA                 : 14 19 25 63
DEC                  : 15
DIV                  : 51
DO                   : 57
DOT                  : 67
ELSE                 : 55
END                  : 1 2
ENDSTMT              : 1 2 11 12 18 22 23 57 58 59 67
EQUAL                : 20 21
EXISTS               : 73
FREQUENCY            : 71
FUNC                 : 58 59
ID                   : 1 2 11 16 17 20 21 26 58 59 62 63 65 67
IF                   : 54 55
KOTOBA               : 1 2
LENGTH               : 70
MEAN                 : 74
MEDIAN               : 75
MINUS                : 48
MODE                 : 76
MULT                 : 50
NOT                  : 45
NUMBER               : 32
NUMBERCTE            : 28
OPENBRAC             : 17 21
OPENCURL             : 5 23 58 59
OPENPAREN            : 11 12 52 54 55 56 57 58 59 67
OR                   : 42
PLUS                 : 47
READ                 : 11
RELOP                : 44
REMOVE               : 79
RETURN               : 65
SEARCH               : 72
SENTENCE             : 34
SENTENCECTE          : 30
TOKENIZE             : 78
VOID                 : 61
WHILE                : 56 57
WORD                 : 33
WORDCOUNT            : 77
WORDCTE              : 29
WRITE                : 12
error                : 

Nonterminals, with rules where they appear

action               : 6
assiaux              : 23 25
assign               : 35
assignaux            : 20 21
block                : 1 2 54 55 55 56 57
blockaux             : 5 6 58 59
condition            : 37
cte                  : 17 21 53 68
cycle                : 38
decaux               : 15 19
declare              : 1 58
declareaux           : 16 17
empty                : 4 7 64 66 69
exp                  : 22 24 25 43 44 44 45 47 48
expression           : 13 14 36 41 42 52 54 55 56 57
factor               : 49 50 51
funcaux              : 58 59
function             : 3
input                : 8
output               : 9
outputaux            : 12 14
parameteraux         : 58 59 63
relopexpression      : 40 41 42
returnaux            : 58 59
spaux                : 67
special              : 67
specialfunction      : 39
start                : 0
startaux             : 1 2 3
statement            : 10
term                 : 46 47 48 50 51
type                 : 16 17 60 62 63

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . KOTOBA ID ENDSTMT declare startaux BEGIN block END
    (2) start -> . KOTOBA ID ENDSTMT startaux BEGIN block END

    KOTOBA          shift and go to state 2

    start                          shift and go to state 1

state 1

    (0) S' -> start .



state 2

    (1) start -> KOTOBA . ID ENDSTMT declare startaux BEGIN block END
    (2) start -> KOTOBA . ID ENDSTMT startaux BEGIN block END

    ID              shift and go to state 3


state 3

    (1) start -> KOTOBA ID . ENDSTMT declare startaux BEGIN block END
    (2) start -> KOTOBA ID . ENDSTMT startaux BEGIN block END

    ENDSTMT         shift and go to state 4


state 4

    (1) start -> KOTOBA ID ENDSTMT . declare startaux BEGIN block END
    (2) start -> KOTOBA ID ENDSTMT . startaux BEGIN block END
    (15) declare -> . DEC decaux
    (3) startaux -> . function startaux
    (4) startaux -> . empty
    (58) function -> . FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> . FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (80) empty -> .

    DEC             shift and go to state 7
    FUNC            shift and go to state 10
    BEGIN           reduce using rule 80 (empty -> .)

    declare                        shift and go to state 5
    startaux                       shift and go to state 6
    function                       shift and go to state 8
    empty                          shift and go to state 9

state 5

    (1) start -> KOTOBA ID ENDSTMT declare . startaux BEGIN block END
    (3) startaux -> . function startaux
    (4) startaux -> . empty
    (58) function -> . FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> . FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (80) empty -> .

    FUNC            shift and go to state 10
    BEGIN           reduce using rule 80 (empty -> .)

    startaux                       shift and go to state 11
    function                       shift and go to state 8
    empty                          shift and go to state 9

state 6

    (2) start -> KOTOBA ID ENDSTMT startaux . BEGIN block END

    BEGIN           shift and go to state 12


state 7

    (15) declare -> DEC . decaux
    (16) decaux -> . type ID declareaux
    (17) decaux -> . type ID OPENBRAC cte CLOSEBRAC declareaux
    (31) type -> . BOOL
    (32) type -> . NUMBER
    (33) type -> . WORD
    (34) type -> . SENTENCE

    BOOL            shift and go to state 15
    NUMBER          shift and go to state 16
    WORD            shift and go to state 17
    SENTENCE        shift and go to state 18

    decaux                         shift and go to state 13
    type                           shift and go to state 14

state 8

    (3) startaux -> function . startaux
    (3) startaux -> . function startaux
    (4) startaux -> . empty
    (58) function -> . FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> . FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (80) empty -> .

    FUNC            shift and go to state 10
    BEGIN           reduce using rule 80 (empty -> .)

    function                       shift and go to state 8
    startaux                       shift and go to state 19
    empty                          shift and go to state 9

state 9

    (4) startaux -> empty .

    BEGIN           reduce using rule 4 (startaux -> empty .)


state 10

    (58) function -> FUNC . funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC . funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (60) funcaux -> . type
    (61) funcaux -> . VOID
    (31) type -> . BOOL
    (32) type -> . NUMBER
    (33) type -> . WORD
    (34) type -> . SENTENCE

    VOID            shift and go to state 22
    BOOL            shift and go to state 15
    NUMBER          shift and go to state 16
    WORD            shift and go to state 17
    SENTENCE        shift and go to state 18

    funcaux                        shift and go to state 20
    type                           shift and go to state 21

state 11

    (1) start -> KOTOBA ID ENDSTMT declare startaux . BEGIN block END

    BEGIN           shift and go to state 23


state 12

    (2) start -> KOTOBA ID ENDSTMT startaux BEGIN . block END
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 25

    block                          shift and go to state 24

state 13

    (15) declare -> DEC decaux .

    FUNC            reduce using rule 15 (declare -> DEC decaux .)
    BEGIN           reduce using rule 15 (declare -> DEC decaux .)
    READ            reduce using rule 15 (declare -> DEC decaux .)
    WRITE           reduce using rule 15 (declare -> DEC decaux .)
    ID              reduce using rule 15 (declare -> DEC decaux .)
    IF              reduce using rule 15 (declare -> DEC decaux .)
    WHILE           reduce using rule 15 (declare -> DEC decaux .)
    DO              reduce using rule 15 (declare -> DEC decaux .)
    NOT             reduce using rule 15 (declare -> DEC decaux .)
    OPENPAREN       reduce using rule 15 (declare -> DEC decaux .)
    BOOLCTE         reduce using rule 15 (declare -> DEC decaux .)
    NUMBERCTE       reduce using rule 15 (declare -> DEC decaux .)
    WORDCTE         reduce using rule 15 (declare -> DEC decaux .)
    SENTENCECTE     reduce using rule 15 (declare -> DEC decaux .)
    RETURN          reduce using rule 15 (declare -> DEC decaux .)
    ENDSTMT         reduce using rule 15 (declare -> DEC decaux .)


state 14

    (16) decaux -> type . ID declareaux
    (17) decaux -> type . ID OPENBRAC cte CLOSEBRAC declareaux

    ID              shift and go to state 26


state 15

    (31) type -> BOOL .

    ID              reduce using rule 31 (type -> BOOL .)


state 16

    (32) type -> NUMBER .

    ID              reduce using rule 32 (type -> NUMBER .)


state 17

    (33) type -> WORD .

    ID              reduce using rule 33 (type -> WORD .)


state 18

    (34) type -> SENTENCE .

    ID              reduce using rule 34 (type -> SENTENCE .)


state 19

    (3) startaux -> function startaux .

    BEGIN           reduce using rule 3 (startaux -> function startaux .)


state 20

    (58) function -> FUNC funcaux . ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux . ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL

    ID              shift and go to state 27


state 21

    (60) funcaux -> type .

    ID              reduce using rule 60 (funcaux -> type .)


state 22

    (61) funcaux -> VOID .

    ID              reduce using rule 61 (funcaux -> VOID .)


state 23

    (1) start -> KOTOBA ID ENDSTMT declare startaux BEGIN . block END
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 25

    block                          shift and go to state 28

state 24

    (2) start -> KOTOBA ID ENDSTMT startaux BEGIN block . END

    END             shift and go to state 29


state 25

    (5) block -> OPENCURL . blockaux CLOSECURL
    (6) blockaux -> . action blockaux
    (7) blockaux -> . empty
    (8) action -> . input
    (9) action -> . output
    (10) action -> . statement
    (80) empty -> .
    (11) input -> . READ OPENPAREN ID CLOSEPAREN ENDSTMT
    (12) output -> . WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
    (35) statement -> . assign
    (36) statement -> . expression
    (37) statement -> . condition
    (38) statement -> . cycle
    (39) statement -> . specialfunction
    (20) assign -> . ID EQUAL assignaux
    (21) assign -> . ID OPENBRAC cte CLOSEBRAC EQUAL assignaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (54) condition -> . IF OPENPAREN expression CLOSEPAREN block
    (55) condition -> . IF OPENPAREN expression CLOSEPAREN block ELSE block
    (56) cycle -> . WHILE OPENPAREN expression CLOSEPAREN block
    (57) cycle -> . DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (67) specialfunction -> . ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    CLOSECURL       reduce using rule 80 (empty -> .)
    READ            shift and go to state 36
    WRITE           shift and go to state 39
    ID              shift and go to state 38
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    DO              shift and go to state 49
    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    blockaux                       shift and go to state 30
    action                         shift and go to state 31
    empty                          shift and go to state 32
    input                          shift and go to state 33
    output                         shift and go to state 34
    statement                      shift and go to state 35
    assign                         shift and go to state 40
    expression                     shift and go to state 41
    condition                      shift and go to state 42
    cycle                          shift and go to state 43
    specialfunction                shift and go to state 44
    cte                            shift and go to state 45
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53

state 26

    (16) decaux -> type ID . declareaux
    (17) decaux -> type ID . OPENBRAC cte CLOSEBRAC declareaux
    (18) declareaux -> . ENDSTMT
    (19) declareaux -> . COMA decaux

    OPENBRAC        shift and go to state 59
    ENDSTMT         shift and go to state 60
    COMA            shift and go to state 61

    declareaux                     shift and go to state 58

state 27

    (58) function -> FUNC funcaux ID . OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID . OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL

    OPENPAREN       shift and go to state 62


state 28

    (1) start -> KOTOBA ID ENDSTMT declare startaux BEGIN block . END

    END             shift and go to state 63


state 29

    (2) start -> KOTOBA ID ENDSTMT startaux BEGIN block END .

    $end            reduce using rule 2 (start -> KOTOBA ID ENDSTMT startaux BEGIN block END .)


state 30

    (5) block -> OPENCURL blockaux . CLOSECURL

    CLOSECURL       shift and go to state 64


state 31

    (6) blockaux -> action . blockaux
    (6) blockaux -> . action blockaux
    (7) blockaux -> . empty
    (8) action -> . input
    (9) action -> . output
    (10) action -> . statement
    (80) empty -> .
    (11) input -> . READ OPENPAREN ID CLOSEPAREN ENDSTMT
    (12) output -> . WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
    (35) statement -> . assign
    (36) statement -> . expression
    (37) statement -> . condition
    (38) statement -> . cycle
    (39) statement -> . specialfunction
    (20) assign -> . ID EQUAL assignaux
    (21) assign -> . ID OPENBRAC cte CLOSEBRAC EQUAL assignaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (54) condition -> . IF OPENPAREN expression CLOSEPAREN block
    (55) condition -> . IF OPENPAREN expression CLOSEPAREN block ELSE block
    (56) cycle -> . WHILE OPENPAREN expression CLOSEPAREN block
    (57) cycle -> . DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (67) specialfunction -> . ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    CLOSECURL       reduce using rule 80 (empty -> .)
    RETURN          reduce using rule 80 (empty -> .)
    ENDSTMT         reduce using rule 80 (empty -> .)
    READ            shift and go to state 36
    WRITE           shift and go to state 39
    ID              shift and go to state 38
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    DO              shift and go to state 49
    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    action                         shift and go to state 31
    blockaux                       shift and go to state 65
    empty                          shift and go to state 32
    input                          shift and go to state 33
    output                         shift and go to state 34
    statement                      shift and go to state 35
    assign                         shift and go to state 40
    expression                     shift and go to state 41
    condition                      shift and go to state 42
    cycle                          shift and go to state 43
    specialfunction                shift and go to state 44
    cte                            shift and go to state 45
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53

state 32

    (7) blockaux -> empty .

    CLOSECURL       reduce using rule 7 (blockaux -> empty .)
    RETURN          reduce using rule 7 (blockaux -> empty .)
    ENDSTMT         reduce using rule 7 (blockaux -> empty .)


state 33

    (8) action -> input .

    READ            reduce using rule 8 (action -> input .)
    WRITE           reduce using rule 8 (action -> input .)
    ID              reduce using rule 8 (action -> input .)
    IF              reduce using rule 8 (action -> input .)
    WHILE           reduce using rule 8 (action -> input .)
    DO              reduce using rule 8 (action -> input .)
    NOT             reduce using rule 8 (action -> input .)
    OPENPAREN       reduce using rule 8 (action -> input .)
    BOOLCTE         reduce using rule 8 (action -> input .)
    NUMBERCTE       reduce using rule 8 (action -> input .)
    WORDCTE         reduce using rule 8 (action -> input .)
    SENTENCECTE     reduce using rule 8 (action -> input .)
    CLOSECURL       reduce using rule 8 (action -> input .)
    RETURN          reduce using rule 8 (action -> input .)
    ENDSTMT         reduce using rule 8 (action -> input .)


state 34

    (9) action -> output .

    READ            reduce using rule 9 (action -> output .)
    WRITE           reduce using rule 9 (action -> output .)
    ID              reduce using rule 9 (action -> output .)
    IF              reduce using rule 9 (action -> output .)
    WHILE           reduce using rule 9 (action -> output .)
    DO              reduce using rule 9 (action -> output .)
    NOT             reduce using rule 9 (action -> output .)
    OPENPAREN       reduce using rule 9 (action -> output .)
    BOOLCTE         reduce using rule 9 (action -> output .)
    NUMBERCTE       reduce using rule 9 (action -> output .)
    WORDCTE         reduce using rule 9 (action -> output .)
    SENTENCECTE     reduce using rule 9 (action -> output .)
    CLOSECURL       reduce using rule 9 (action -> output .)
    RETURN          reduce using rule 9 (action -> output .)
    ENDSTMT         reduce using rule 9 (action -> output .)


state 35

    (10) action -> statement .

    READ            reduce using rule 10 (action -> statement .)
    WRITE           reduce using rule 10 (action -> statement .)
    ID              reduce using rule 10 (action -> statement .)
    IF              reduce using rule 10 (action -> statement .)
    WHILE           reduce using rule 10 (action -> statement .)
    DO              reduce using rule 10 (action -> statement .)
    NOT             reduce using rule 10 (action -> statement .)
    OPENPAREN       reduce using rule 10 (action -> statement .)
    BOOLCTE         reduce using rule 10 (action -> statement .)
    NUMBERCTE       reduce using rule 10 (action -> statement .)
    WORDCTE         reduce using rule 10 (action -> statement .)
    SENTENCECTE     reduce using rule 10 (action -> statement .)
    CLOSECURL       reduce using rule 10 (action -> statement .)
    RETURN          reduce using rule 10 (action -> statement .)
    ENDSTMT         reduce using rule 10 (action -> statement .)


state 36

    (11) input -> READ . OPENPAREN ID CLOSEPAREN ENDSTMT

    OPENPAREN       shift and go to state 66


state 37

    (52) factor -> OPENPAREN . expression CLOSEPAREN
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    expression                     shift and go to state 67
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 38

    (20) assign -> ID . EQUAL assignaux
    (21) assign -> ID . OPENBRAC cte CLOSEBRAC EQUAL assignaux
    (67) specialfunction -> ID . DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (26) cte -> ID .

    EQUAL           shift and go to state 69
    OPENBRAC        shift and go to state 70
    DOT             shift and go to state 71
    MULT            reduce using rule 26 (cte -> ID .)
    DIV             reduce using rule 26 (cte -> ID .)
    PLUS            reduce using rule 26 (cte -> ID .)
    MINUS           reduce using rule 26 (cte -> ID .)
    RELOP           reduce using rule 26 (cte -> ID .)
    AND             reduce using rule 26 (cte -> ID .)
    OR              reduce using rule 26 (cte -> ID .)
    READ            reduce using rule 26 (cte -> ID .)
    WRITE           reduce using rule 26 (cte -> ID .)
    ID              reduce using rule 26 (cte -> ID .)
    IF              reduce using rule 26 (cte -> ID .)
    WHILE           reduce using rule 26 (cte -> ID .)
    DO              reduce using rule 26 (cte -> ID .)
    NOT             reduce using rule 26 (cte -> ID .)
    OPENPAREN       reduce using rule 26 (cte -> ID .)
    BOOLCTE         reduce using rule 26 (cte -> ID .)
    NUMBERCTE       reduce using rule 26 (cte -> ID .)
    WORDCTE         reduce using rule 26 (cte -> ID .)
    SENTENCECTE     reduce using rule 26 (cte -> ID .)
    CLOSECURL       reduce using rule 26 (cte -> ID .)
    RETURN          reduce using rule 26 (cte -> ID .)
    ENDSTMT         reduce using rule 26 (cte -> ID .)


state 39

    (12) output -> WRITE . OPENPAREN outputaux CLOSEPAREN ENDSTMT

    OPENPAREN       shift and go to state 72


state 40

    (35) statement -> assign .

    READ            reduce using rule 35 (statement -> assign .)
    WRITE           reduce using rule 35 (statement -> assign .)
    ID              reduce using rule 35 (statement -> assign .)
    IF              reduce using rule 35 (statement -> assign .)
    WHILE           reduce using rule 35 (statement -> assign .)
    DO              reduce using rule 35 (statement -> assign .)
    NOT             reduce using rule 35 (statement -> assign .)
    OPENPAREN       reduce using rule 35 (statement -> assign .)
    BOOLCTE         reduce using rule 35 (statement -> assign .)
    NUMBERCTE       reduce using rule 35 (statement -> assign .)
    WORDCTE         reduce using rule 35 (statement -> assign .)
    SENTENCECTE     reduce using rule 35 (statement -> assign .)
    CLOSECURL       reduce using rule 35 (statement -> assign .)
    RETURN          reduce using rule 35 (statement -> assign .)
    ENDSTMT         reduce using rule 35 (statement -> assign .)


state 41

    (36) statement -> expression .

    READ            reduce using rule 36 (statement -> expression .)
    WRITE           reduce using rule 36 (statement -> expression .)
    ID              reduce using rule 36 (statement -> expression .)
    IF              reduce using rule 36 (statement -> expression .)
    WHILE           reduce using rule 36 (statement -> expression .)
    DO              reduce using rule 36 (statement -> expression .)
    NOT             reduce using rule 36 (statement -> expression .)
    OPENPAREN       reduce using rule 36 (statement -> expression .)
    BOOLCTE         reduce using rule 36 (statement -> expression .)
    NUMBERCTE       reduce using rule 36 (statement -> expression .)
    WORDCTE         reduce using rule 36 (statement -> expression .)
    SENTENCECTE     reduce using rule 36 (statement -> expression .)
    CLOSECURL       reduce using rule 36 (statement -> expression .)
    RETURN          reduce using rule 36 (statement -> expression .)
    ENDSTMT         reduce using rule 36 (statement -> expression .)


state 42

    (37) statement -> condition .

    READ            reduce using rule 37 (statement -> condition .)
    WRITE           reduce using rule 37 (statement -> condition .)
    ID              reduce using rule 37 (statement -> condition .)
    IF              reduce using rule 37 (statement -> condition .)
    WHILE           reduce using rule 37 (statement -> condition .)
    DO              reduce using rule 37 (statement -> condition .)
    NOT             reduce using rule 37 (statement -> condition .)
    OPENPAREN       reduce using rule 37 (statement -> condition .)
    BOOLCTE         reduce using rule 37 (statement -> condition .)
    NUMBERCTE       reduce using rule 37 (statement -> condition .)
    WORDCTE         reduce using rule 37 (statement -> condition .)
    SENTENCECTE     reduce using rule 37 (statement -> condition .)
    CLOSECURL       reduce using rule 37 (statement -> condition .)
    RETURN          reduce using rule 37 (statement -> condition .)
    ENDSTMT         reduce using rule 37 (statement -> condition .)


state 43

    (38) statement -> cycle .

    READ            reduce using rule 38 (statement -> cycle .)
    WRITE           reduce using rule 38 (statement -> cycle .)
    ID              reduce using rule 38 (statement -> cycle .)
    IF              reduce using rule 38 (statement -> cycle .)
    WHILE           reduce using rule 38 (statement -> cycle .)
    DO              reduce using rule 38 (statement -> cycle .)
    NOT             reduce using rule 38 (statement -> cycle .)
    OPENPAREN       reduce using rule 38 (statement -> cycle .)
    BOOLCTE         reduce using rule 38 (statement -> cycle .)
    NUMBERCTE       reduce using rule 38 (statement -> cycle .)
    WORDCTE         reduce using rule 38 (statement -> cycle .)
    SENTENCECTE     reduce using rule 38 (statement -> cycle .)
    CLOSECURL       reduce using rule 38 (statement -> cycle .)
    RETURN          reduce using rule 38 (statement -> cycle .)
    ENDSTMT         reduce using rule 38 (statement -> cycle .)


state 44

    (39) statement -> specialfunction .

    READ            reduce using rule 39 (statement -> specialfunction .)
    WRITE           reduce using rule 39 (statement -> specialfunction .)
    ID              reduce using rule 39 (statement -> specialfunction .)
    IF              reduce using rule 39 (statement -> specialfunction .)
    WHILE           reduce using rule 39 (statement -> specialfunction .)
    DO              reduce using rule 39 (statement -> specialfunction .)
    NOT             reduce using rule 39 (statement -> specialfunction .)
    OPENPAREN       reduce using rule 39 (statement -> specialfunction .)
    BOOLCTE         reduce using rule 39 (statement -> specialfunction .)
    NUMBERCTE       reduce using rule 39 (statement -> specialfunction .)
    WORDCTE         reduce using rule 39 (statement -> specialfunction .)
    SENTENCECTE     reduce using rule 39 (statement -> specialfunction .)
    CLOSECURL       reduce using rule 39 (statement -> specialfunction .)
    RETURN          reduce using rule 39 (statement -> specialfunction .)
    ENDSTMT         reduce using rule 39 (statement -> specialfunction .)


state 45

    (53) factor -> cte .

    MULT            reduce using rule 53 (factor -> cte .)
    DIV             reduce using rule 53 (factor -> cte .)
    PLUS            reduce using rule 53 (factor -> cte .)
    MINUS           reduce using rule 53 (factor -> cte .)
    RELOP           reduce using rule 53 (factor -> cte .)
    AND             reduce using rule 53 (factor -> cte .)
    OR              reduce using rule 53 (factor -> cte .)
    READ            reduce using rule 53 (factor -> cte .)
    WRITE           reduce using rule 53 (factor -> cte .)
    ID              reduce using rule 53 (factor -> cte .)
    IF              reduce using rule 53 (factor -> cte .)
    WHILE           reduce using rule 53 (factor -> cte .)
    DO              reduce using rule 53 (factor -> cte .)
    NOT             reduce using rule 53 (factor -> cte .)
    OPENPAREN       reduce using rule 53 (factor -> cte .)
    BOOLCTE         reduce using rule 53 (factor -> cte .)
    NUMBERCTE       reduce using rule 53 (factor -> cte .)
    WORDCTE         reduce using rule 53 (factor -> cte .)
    SENTENCECTE     reduce using rule 53 (factor -> cte .)
    CLOSECURL       reduce using rule 53 (factor -> cte .)
    RETURN          reduce using rule 53 (factor -> cte .)
    ENDSTMT         reduce using rule 53 (factor -> cte .)
    CLOSEPAREN      reduce using rule 53 (factor -> cte .)
    COMA            reduce using rule 53 (factor -> cte .)


state 46

    (40) expression -> relopexpression .
    (41) expression -> relopexpression . AND expression
    (42) expression -> relopexpression . OR expression

    READ            reduce using rule 40 (expression -> relopexpression .)
    WRITE           reduce using rule 40 (expression -> relopexpression .)
    ID              reduce using rule 40 (expression -> relopexpression .)
    IF              reduce using rule 40 (expression -> relopexpression .)
    WHILE           reduce using rule 40 (expression -> relopexpression .)
    DO              reduce using rule 40 (expression -> relopexpression .)
    NOT             reduce using rule 40 (expression -> relopexpression .)
    OPENPAREN       reduce using rule 40 (expression -> relopexpression .)
    BOOLCTE         reduce using rule 40 (expression -> relopexpression .)
    NUMBERCTE       reduce using rule 40 (expression -> relopexpression .)
    WORDCTE         reduce using rule 40 (expression -> relopexpression .)
    SENTENCECTE     reduce using rule 40 (expression -> relopexpression .)
    CLOSECURL       reduce using rule 40 (expression -> relopexpression .)
    RETURN          reduce using rule 40 (expression -> relopexpression .)
    ENDSTMT         reduce using rule 40 (expression -> relopexpression .)
    CLOSEPAREN      reduce using rule 40 (expression -> relopexpression .)
    COMA            reduce using rule 40 (expression -> relopexpression .)
    AND             shift and go to state 73
    OR              shift and go to state 74


state 47

    (54) condition -> IF . OPENPAREN expression CLOSEPAREN block
    (55) condition -> IF . OPENPAREN expression CLOSEPAREN block ELSE block

    OPENPAREN       shift and go to state 75


state 48

    (56) cycle -> WHILE . OPENPAREN expression CLOSEPAREN block

    OPENPAREN       shift and go to state 76


state 49

    (57) cycle -> DO . block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 25

    block                          shift and go to state 77

state 50

    (43) relopexpression -> exp .
    (44) relopexpression -> exp . RELOP exp

    AND             reduce using rule 43 (relopexpression -> exp .)
    OR              reduce using rule 43 (relopexpression -> exp .)
    READ            reduce using rule 43 (relopexpression -> exp .)
    WRITE           reduce using rule 43 (relopexpression -> exp .)
    ID              reduce using rule 43 (relopexpression -> exp .)
    IF              reduce using rule 43 (relopexpression -> exp .)
    WHILE           reduce using rule 43 (relopexpression -> exp .)
    DO              reduce using rule 43 (relopexpression -> exp .)
    NOT             reduce using rule 43 (relopexpression -> exp .)
    OPENPAREN       reduce using rule 43 (relopexpression -> exp .)
    BOOLCTE         reduce using rule 43 (relopexpression -> exp .)
    NUMBERCTE       reduce using rule 43 (relopexpression -> exp .)
    WORDCTE         reduce using rule 43 (relopexpression -> exp .)
    SENTENCECTE     reduce using rule 43 (relopexpression -> exp .)
    CLOSECURL       reduce using rule 43 (relopexpression -> exp .)
    RETURN          reduce using rule 43 (relopexpression -> exp .)
    ENDSTMT         reduce using rule 43 (relopexpression -> exp .)
    CLOSEPAREN      reduce using rule 43 (relopexpression -> exp .)
    COMA            reduce using rule 43 (relopexpression -> exp .)
    RELOP           shift and go to state 78


state 51

    (45) relopexpression -> NOT . exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    exp                            shift and go to state 79
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 52

    (46) exp -> term .
    (47) exp -> term . PLUS exp
    (48) exp -> term . MINUS exp

    RELOP           reduce using rule 46 (exp -> term .)
    AND             reduce using rule 46 (exp -> term .)
    OR              reduce using rule 46 (exp -> term .)
    READ            reduce using rule 46 (exp -> term .)
    WRITE           reduce using rule 46 (exp -> term .)
    ID              reduce using rule 46 (exp -> term .)
    IF              reduce using rule 46 (exp -> term .)
    WHILE           reduce using rule 46 (exp -> term .)
    DO              reduce using rule 46 (exp -> term .)
    NOT             reduce using rule 46 (exp -> term .)
    OPENPAREN       reduce using rule 46 (exp -> term .)
    BOOLCTE         reduce using rule 46 (exp -> term .)
    NUMBERCTE       reduce using rule 46 (exp -> term .)
    WORDCTE         reduce using rule 46 (exp -> term .)
    SENTENCECTE     reduce using rule 46 (exp -> term .)
    CLOSECURL       reduce using rule 46 (exp -> term .)
    RETURN          reduce using rule 46 (exp -> term .)
    ENDSTMT         reduce using rule 46 (exp -> term .)
    CLOSEPAREN      reduce using rule 46 (exp -> term .)
    COMA            reduce using rule 46 (exp -> term .)
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81


state 53

    (49) term -> factor .
    (50) term -> factor . MULT term
    (51) term -> factor . DIV term

    PLUS            reduce using rule 49 (term -> factor .)
    MINUS           reduce using rule 49 (term -> factor .)
    RELOP           reduce using rule 49 (term -> factor .)
    AND             reduce using rule 49 (term -> factor .)
    OR              reduce using rule 49 (term -> factor .)
    READ            reduce using rule 49 (term -> factor .)
    WRITE           reduce using rule 49 (term -> factor .)
    ID              reduce using rule 49 (term -> factor .)
    IF              reduce using rule 49 (term -> factor .)
    WHILE           reduce using rule 49 (term -> factor .)
    DO              reduce using rule 49 (term -> factor .)
    NOT             reduce using rule 49 (term -> factor .)
    OPENPAREN       reduce using rule 49 (term -> factor .)
    BOOLCTE         reduce using rule 49 (term -> factor .)
    NUMBERCTE       reduce using rule 49 (term -> factor .)
    WORDCTE         reduce using rule 49 (term -> factor .)
    SENTENCECTE     reduce using rule 49 (term -> factor .)
    CLOSECURL       reduce using rule 49 (term -> factor .)
    RETURN          reduce using rule 49 (term -> factor .)
    ENDSTMT         reduce using rule 49 (term -> factor .)
    CLOSEPAREN      reduce using rule 49 (term -> factor .)
    COMA            reduce using rule 49 (term -> factor .)
    MULT            shift and go to state 82
    DIV             shift and go to state 83


state 54

    (27) cte -> BOOLCTE .

    MULT            reduce using rule 27 (cte -> BOOLCTE .)
    DIV             reduce using rule 27 (cte -> BOOLCTE .)
    PLUS            reduce using rule 27 (cte -> BOOLCTE .)
    MINUS           reduce using rule 27 (cte -> BOOLCTE .)
    RELOP           reduce using rule 27 (cte -> BOOLCTE .)
    AND             reduce using rule 27 (cte -> BOOLCTE .)
    OR              reduce using rule 27 (cte -> BOOLCTE .)
    READ            reduce using rule 27 (cte -> BOOLCTE .)
    WRITE           reduce using rule 27 (cte -> BOOLCTE .)
    ID              reduce using rule 27 (cte -> BOOLCTE .)
    IF              reduce using rule 27 (cte -> BOOLCTE .)
    WHILE           reduce using rule 27 (cte -> BOOLCTE .)
    DO              reduce using rule 27 (cte -> BOOLCTE .)
    NOT             reduce using rule 27 (cte -> BOOLCTE .)
    OPENPAREN       reduce using rule 27 (cte -> BOOLCTE .)
    BOOLCTE         reduce using rule 27 (cte -> BOOLCTE .)
    NUMBERCTE       reduce using rule 27 (cte -> BOOLCTE .)
    WORDCTE         reduce using rule 27 (cte -> BOOLCTE .)
    SENTENCECTE     reduce using rule 27 (cte -> BOOLCTE .)
    CLOSECURL       reduce using rule 27 (cte -> BOOLCTE .)
    RETURN          reduce using rule 27 (cte -> BOOLCTE .)
    ENDSTMT         reduce using rule 27 (cte -> BOOLCTE .)
    CLOSEPAREN      reduce using rule 27 (cte -> BOOLCTE .)
    COMA            reduce using rule 27 (cte -> BOOLCTE .)
    CLOSEBRAC       reduce using rule 27 (cte -> BOOLCTE .)


state 55

    (28) cte -> NUMBERCTE .

    MULT            reduce using rule 28 (cte -> NUMBERCTE .)
    DIV             reduce using rule 28 (cte -> NUMBERCTE .)
    PLUS            reduce using rule 28 (cte -> NUMBERCTE .)
    MINUS           reduce using rule 28 (cte -> NUMBERCTE .)
    RELOP           reduce using rule 28 (cte -> NUMBERCTE .)
    AND             reduce using rule 28 (cte -> NUMBERCTE .)
    OR              reduce using rule 28 (cte -> NUMBERCTE .)
    READ            reduce using rule 28 (cte -> NUMBERCTE .)
    WRITE           reduce using rule 28 (cte -> NUMBERCTE .)
    ID              reduce using rule 28 (cte -> NUMBERCTE .)
    IF              reduce using rule 28 (cte -> NUMBERCTE .)
    WHILE           reduce using rule 28 (cte -> NUMBERCTE .)
    DO              reduce using rule 28 (cte -> NUMBERCTE .)
    NOT             reduce using rule 28 (cte -> NUMBERCTE .)
    OPENPAREN       reduce using rule 28 (cte -> NUMBERCTE .)
    BOOLCTE         reduce using rule 28 (cte -> NUMBERCTE .)
    NUMBERCTE       reduce using rule 28 (cte -> NUMBERCTE .)
    WORDCTE         reduce using rule 28 (cte -> NUMBERCTE .)
    SENTENCECTE     reduce using rule 28 (cte -> NUMBERCTE .)
    CLOSECURL       reduce using rule 28 (cte -> NUMBERCTE .)
    RETURN          reduce using rule 28 (cte -> NUMBERCTE .)
    ENDSTMT         reduce using rule 28 (cte -> NUMBERCTE .)
    CLOSEPAREN      reduce using rule 28 (cte -> NUMBERCTE .)
    COMA            reduce using rule 28 (cte -> NUMBERCTE .)
    CLOSEBRAC       reduce using rule 28 (cte -> NUMBERCTE .)


state 56

    (29) cte -> WORDCTE .

    MULT            reduce using rule 29 (cte -> WORDCTE .)
    DIV             reduce using rule 29 (cte -> WORDCTE .)
    PLUS            reduce using rule 29 (cte -> WORDCTE .)
    MINUS           reduce using rule 29 (cte -> WORDCTE .)
    RELOP           reduce using rule 29 (cte -> WORDCTE .)
    AND             reduce using rule 29 (cte -> WORDCTE .)
    OR              reduce using rule 29 (cte -> WORDCTE .)
    READ            reduce using rule 29 (cte -> WORDCTE .)
    WRITE           reduce using rule 29 (cte -> WORDCTE .)
    ID              reduce using rule 29 (cte -> WORDCTE .)
    IF              reduce using rule 29 (cte -> WORDCTE .)
    WHILE           reduce using rule 29 (cte -> WORDCTE .)
    DO              reduce using rule 29 (cte -> WORDCTE .)
    NOT             reduce using rule 29 (cte -> WORDCTE .)
    OPENPAREN       reduce using rule 29 (cte -> WORDCTE .)
    BOOLCTE         reduce using rule 29 (cte -> WORDCTE .)
    NUMBERCTE       reduce using rule 29 (cte -> WORDCTE .)
    WORDCTE         reduce using rule 29 (cte -> WORDCTE .)
    SENTENCECTE     reduce using rule 29 (cte -> WORDCTE .)
    CLOSECURL       reduce using rule 29 (cte -> WORDCTE .)
    RETURN          reduce using rule 29 (cte -> WORDCTE .)
    ENDSTMT         reduce using rule 29 (cte -> WORDCTE .)
    CLOSEPAREN      reduce using rule 29 (cte -> WORDCTE .)
    COMA            reduce using rule 29 (cte -> WORDCTE .)
    CLOSEBRAC       reduce using rule 29 (cte -> WORDCTE .)


state 57

    (30) cte -> SENTENCECTE .

    MULT            reduce using rule 30 (cte -> SENTENCECTE .)
    DIV             reduce using rule 30 (cte -> SENTENCECTE .)
    PLUS            reduce using rule 30 (cte -> SENTENCECTE .)
    MINUS           reduce using rule 30 (cte -> SENTENCECTE .)
    RELOP           reduce using rule 30 (cte -> SENTENCECTE .)
    AND             reduce using rule 30 (cte -> SENTENCECTE .)
    OR              reduce using rule 30 (cte -> SENTENCECTE .)
    READ            reduce using rule 30 (cte -> SENTENCECTE .)
    WRITE           reduce using rule 30 (cte -> SENTENCECTE .)
    ID              reduce using rule 30 (cte -> SENTENCECTE .)
    IF              reduce using rule 30 (cte -> SENTENCECTE .)
    WHILE           reduce using rule 30 (cte -> SENTENCECTE .)
    DO              reduce using rule 30 (cte -> SENTENCECTE .)
    NOT             reduce using rule 30 (cte -> SENTENCECTE .)
    OPENPAREN       reduce using rule 30 (cte -> SENTENCECTE .)
    BOOLCTE         reduce using rule 30 (cte -> SENTENCECTE .)
    NUMBERCTE       reduce using rule 30 (cte -> SENTENCECTE .)
    WORDCTE         reduce using rule 30 (cte -> SENTENCECTE .)
    SENTENCECTE     reduce using rule 30 (cte -> SENTENCECTE .)
    CLOSECURL       reduce using rule 30 (cte -> SENTENCECTE .)
    RETURN          reduce using rule 30 (cte -> SENTENCECTE .)
    ENDSTMT         reduce using rule 30 (cte -> SENTENCECTE .)
    CLOSEPAREN      reduce using rule 30 (cte -> SENTENCECTE .)
    COMA            reduce using rule 30 (cte -> SENTENCECTE .)
    CLOSEBRAC       reduce using rule 30 (cte -> SENTENCECTE .)


state 58

    (16) decaux -> type ID declareaux .

    FUNC            reduce using rule 16 (decaux -> type ID declareaux .)
    BEGIN           reduce using rule 16 (decaux -> type ID declareaux .)
    READ            reduce using rule 16 (decaux -> type ID declareaux .)
    WRITE           reduce using rule 16 (decaux -> type ID declareaux .)
    ID              reduce using rule 16 (decaux -> type ID declareaux .)
    IF              reduce using rule 16 (decaux -> type ID declareaux .)
    WHILE           reduce using rule 16 (decaux -> type ID declareaux .)
    DO              reduce using rule 16 (decaux -> type ID declareaux .)
    NOT             reduce using rule 16 (decaux -> type ID declareaux .)
    OPENPAREN       reduce using rule 16 (decaux -> type ID declareaux .)
    BOOLCTE         reduce using rule 16 (decaux -> type ID declareaux .)
    NUMBERCTE       reduce using rule 16 (decaux -> type ID declareaux .)
    WORDCTE         reduce using rule 16 (decaux -> type ID declareaux .)
    SENTENCECTE     reduce using rule 16 (decaux -> type ID declareaux .)
    RETURN          reduce using rule 16 (decaux -> type ID declareaux .)
    ENDSTMT         reduce using rule 16 (decaux -> type ID declareaux .)


state 59

    (17) decaux -> type ID OPENBRAC . cte CLOSEBRAC declareaux
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    cte                            shift and go to state 84

state 60

    (18) declareaux -> ENDSTMT .

    FUNC            reduce using rule 18 (declareaux -> ENDSTMT .)
    BEGIN           reduce using rule 18 (declareaux -> ENDSTMT .)
    READ            reduce using rule 18 (declareaux -> ENDSTMT .)
    WRITE           reduce using rule 18 (declareaux -> ENDSTMT .)
    ID              reduce using rule 18 (declareaux -> ENDSTMT .)
    IF              reduce using rule 18 (declareaux -> ENDSTMT .)
    WHILE           reduce using rule 18 (declareaux -> ENDSTMT .)
    DO              reduce using rule 18 (declareaux -> ENDSTMT .)
    NOT             reduce using rule 18 (declareaux -> ENDSTMT .)
    OPENPAREN       reduce using rule 18 (declareaux -> ENDSTMT .)
    BOOLCTE         reduce using rule 18 (declareaux -> ENDSTMT .)
    NUMBERCTE       reduce using rule 18 (declareaux -> ENDSTMT .)
    WORDCTE         reduce using rule 18 (declareaux -> ENDSTMT .)
    SENTENCECTE     reduce using rule 18 (declareaux -> ENDSTMT .)
    RETURN          reduce using rule 18 (declareaux -> ENDSTMT .)
    ENDSTMT         reduce using rule 18 (declareaux -> ENDSTMT .)


state 61

    (19) declareaux -> COMA . decaux
    (16) decaux -> . type ID declareaux
    (17) decaux -> . type ID OPENBRAC cte CLOSEBRAC declareaux
    (31) type -> . BOOL
    (32) type -> . NUMBER
    (33) type -> . WORD
    (34) type -> . SENTENCE

    BOOL            shift and go to state 15
    NUMBER          shift and go to state 16
    WORD            shift and go to state 17
    SENTENCE        shift and go to state 18

    decaux                         shift and go to state 85
    type                           shift and go to state 14

state 62

    (58) function -> FUNC funcaux ID OPENPAREN . parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID OPENPAREN . parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL
    (62) parameteraux -> . type ID
    (63) parameteraux -> . type ID COMA parameteraux
    (64) parameteraux -> . empty
    (31) type -> . BOOL
    (32) type -> . NUMBER
    (33) type -> . WORD
    (34) type -> . SENTENCE
    (80) empty -> .

    BOOL            shift and go to state 15
    NUMBER          shift and go to state 16
    WORD            shift and go to state 17
    SENTENCE        shift and go to state 18
    CLOSEPAREN      reduce using rule 80 (empty -> .)

    parameteraux                   shift and go to state 86
    type                           shift and go to state 87
    empty                          shift and go to state 88

state 63

    (1) start -> KOTOBA ID ENDSTMT declare startaux BEGIN block END .

    $end            reduce using rule 1 (start -> KOTOBA ID ENDSTMT declare startaux BEGIN block END .)


state 64

    (5) block -> OPENCURL blockaux CLOSECURL .

    END             reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    WHILE           reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    ELSE            reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    READ            reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    WRITE           reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    ID              reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    IF              reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    DO              reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    NOT             reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    OPENPAREN       reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    BOOLCTE         reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    NUMBERCTE       reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    WORDCTE         reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    SENTENCECTE     reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    CLOSECURL       reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    RETURN          reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)
    ENDSTMT         reduce using rule 5 (block -> OPENCURL blockaux CLOSECURL .)


state 65

    (6) blockaux -> action blockaux .

    CLOSECURL       reduce using rule 6 (blockaux -> action blockaux .)
    RETURN          reduce using rule 6 (blockaux -> action blockaux .)
    ENDSTMT         reduce using rule 6 (blockaux -> action blockaux .)


state 66

    (11) input -> READ OPENPAREN . ID CLOSEPAREN ENDSTMT

    ID              shift and go to state 89


state 67

    (52) factor -> OPENPAREN expression . CLOSEPAREN

    CLOSEPAREN      shift and go to state 90


state 68

    (26) cte -> ID .

    MULT            reduce using rule 26 (cte -> ID .)
    DIV             reduce using rule 26 (cte -> ID .)
    PLUS            reduce using rule 26 (cte -> ID .)
    MINUS           reduce using rule 26 (cte -> ID .)
    RELOP           reduce using rule 26 (cte -> ID .)
    AND             reduce using rule 26 (cte -> ID .)
    OR              reduce using rule 26 (cte -> ID .)
    CLOSEPAREN      reduce using rule 26 (cte -> ID .)
    READ            reduce using rule 26 (cte -> ID .)
    WRITE           reduce using rule 26 (cte -> ID .)
    ID              reduce using rule 26 (cte -> ID .)
    IF              reduce using rule 26 (cte -> ID .)
    WHILE           reduce using rule 26 (cte -> ID .)
    DO              reduce using rule 26 (cte -> ID .)
    NOT             reduce using rule 26 (cte -> ID .)
    OPENPAREN       reduce using rule 26 (cte -> ID .)
    BOOLCTE         reduce using rule 26 (cte -> ID .)
    NUMBERCTE       reduce using rule 26 (cte -> ID .)
    WORDCTE         reduce using rule 26 (cte -> ID .)
    SENTENCECTE     reduce using rule 26 (cte -> ID .)
    CLOSECURL       reduce using rule 26 (cte -> ID .)
    RETURN          reduce using rule 26 (cte -> ID .)
    ENDSTMT         reduce using rule 26 (cte -> ID .)
    COMA            reduce using rule 26 (cte -> ID .)
    CLOSEBRAC       reduce using rule 26 (cte -> ID .)


state 69

    (20) assign -> ID EQUAL . assignaux
    (22) assignaux -> . exp ENDSTMT
    (23) assignaux -> . OPENCURL assiaux CLOSECURL ENDSTMT
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENCURL        shift and go to state 93
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    assignaux                      shift and go to state 91
    exp                            shift and go to state 92
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 70

    (21) assign -> ID OPENBRAC . cte CLOSEBRAC EQUAL assignaux
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    cte                            shift and go to state 94

state 71

    (67) specialfunction -> ID DOT . special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (70) special -> . LENGTH
    (71) special -> . FREQUENCY
    (72) special -> . SEARCH
    (73) special -> . EXISTS
    (74) special -> . MEAN
    (75) special -> . MEDIAN
    (76) special -> . MODE
    (77) special -> . WORDCOUNT
    (78) special -> . TOKENIZE
    (79) special -> . REMOVE

    LENGTH          shift and go to state 96
    FREQUENCY       shift and go to state 97
    SEARCH          shift and go to state 98
    EXISTS          shift and go to state 99
    MEAN            shift and go to state 100
    MEDIAN          shift and go to state 101
    MODE            shift and go to state 102
    WORDCOUNT       shift and go to state 103
    TOKENIZE        shift and go to state 104
    REMOVE          shift and go to state 105

    special                        shift and go to state 95

state 72

    (12) output -> WRITE OPENPAREN . outputaux CLOSEPAREN ENDSTMT
    (13) outputaux -> . expression
    (14) outputaux -> . expression COMA outputaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    outputaux                      shift and go to state 106
    expression                     shift and go to state 107
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 73

    (41) expression -> relopexpression AND . expression
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    relopexpression                shift and go to state 46
    expression                     shift and go to state 108
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 74

    (42) expression -> relopexpression OR . expression
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    relopexpression                shift and go to state 46
    expression                     shift and go to state 109
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 75

    (54) condition -> IF OPENPAREN . expression CLOSEPAREN block
    (55) condition -> IF OPENPAREN . expression CLOSEPAREN block ELSE block
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    expression                     shift and go to state 110
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 76

    (56) cycle -> WHILE OPENPAREN . expression CLOSEPAREN block
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    expression                     shift and go to state 111
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 77

    (57) cycle -> DO block . WHILE OPENPAREN expression CLOSEPAREN ENDSTMT

    WHILE           shift and go to state 112


state 78

    (44) relopexpression -> exp RELOP . exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    exp                            shift and go to state 113
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 79

    (45) relopexpression -> NOT exp .

    AND             reduce using rule 45 (relopexpression -> NOT exp .)
    OR              reduce using rule 45 (relopexpression -> NOT exp .)
    READ            reduce using rule 45 (relopexpression -> NOT exp .)
    WRITE           reduce using rule 45 (relopexpression -> NOT exp .)
    ID              reduce using rule 45 (relopexpression -> NOT exp .)
    IF              reduce using rule 45 (relopexpression -> NOT exp .)
    WHILE           reduce using rule 45 (relopexpression -> NOT exp .)
    DO              reduce using rule 45 (relopexpression -> NOT exp .)
    NOT             reduce using rule 45 (relopexpression -> NOT exp .)
    OPENPAREN       reduce using rule 45 (relopexpression -> NOT exp .)
    BOOLCTE         reduce using rule 45 (relopexpression -> NOT exp .)
    NUMBERCTE       reduce using rule 45 (relopexpression -> NOT exp .)
    WORDCTE         reduce using rule 45 (relopexpression -> NOT exp .)
    SENTENCECTE     reduce using rule 45 (relopexpression -> NOT exp .)
    CLOSECURL       reduce using rule 45 (relopexpression -> NOT exp .)
    RETURN          reduce using rule 45 (relopexpression -> NOT exp .)
    ENDSTMT         reduce using rule 45 (relopexpression -> NOT exp .)
    CLOSEPAREN      reduce using rule 45 (relopexpression -> NOT exp .)
    COMA            reduce using rule 45 (relopexpression -> NOT exp .)


state 80

    (47) exp -> term PLUS . exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    term                           shift and go to state 52
    exp                            shift and go to state 114
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 81

    (48) exp -> term MINUS . exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    term                           shift and go to state 52
    exp                            shift and go to state 115
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 82

    (50) term -> factor MULT . term
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    factor                         shift and go to state 53
    term                           shift and go to state 116
    cte                            shift and go to state 45

state 83

    (51) term -> factor DIV . term
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    factor                         shift and go to state 53
    term                           shift and go to state 117
    cte                            shift and go to state 45

state 84

    (17) decaux -> type ID OPENBRAC cte . CLOSEBRAC declareaux

    CLOSEBRAC       shift and go to state 118


state 85

    (19) declareaux -> COMA decaux .

    FUNC            reduce using rule 19 (declareaux -> COMA decaux .)
    BEGIN           reduce using rule 19 (declareaux -> COMA decaux .)
    READ            reduce using rule 19 (declareaux -> COMA decaux .)
    WRITE           reduce using rule 19 (declareaux -> COMA decaux .)
    ID              reduce using rule 19 (declareaux -> COMA decaux .)
    IF              reduce using rule 19 (declareaux -> COMA decaux .)
    WHILE           reduce using rule 19 (declareaux -> COMA decaux .)
    DO              reduce using rule 19 (declareaux -> COMA decaux .)
    NOT             reduce using rule 19 (declareaux -> COMA decaux .)
    OPENPAREN       reduce using rule 19 (declareaux -> COMA decaux .)
    BOOLCTE         reduce using rule 19 (declareaux -> COMA decaux .)
    NUMBERCTE       reduce using rule 19 (declareaux -> COMA decaux .)
    WORDCTE         reduce using rule 19 (declareaux -> COMA decaux .)
    SENTENCECTE     reduce using rule 19 (declareaux -> COMA decaux .)
    RETURN          reduce using rule 19 (declareaux -> COMA decaux .)
    ENDSTMT         reduce using rule 19 (declareaux -> COMA decaux .)


state 86

    (58) function -> FUNC funcaux ID OPENPAREN parameteraux . CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID OPENPAREN parameteraux . CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL

    CLOSEPAREN      shift and go to state 119


state 87

    (62) parameteraux -> type . ID
    (63) parameteraux -> type . ID COMA parameteraux

    ID              shift and go to state 120


state 88

    (64) parameteraux -> empty .

    CLOSEPAREN      reduce using rule 64 (parameteraux -> empty .)


state 89

    (11) input -> READ OPENPAREN ID . CLOSEPAREN ENDSTMT

    CLOSEPAREN      shift and go to state 121


state 90

    (52) factor -> OPENPAREN expression CLOSEPAREN .

    MULT            reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    DIV             reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    PLUS            reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    MINUS           reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    RELOP           reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    AND             reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    OR              reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    READ            reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    WRITE           reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    ID              reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    IF              reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    WHILE           reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    DO              reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    NOT             reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    OPENPAREN       reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    BOOLCTE         reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    NUMBERCTE       reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    WORDCTE         reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    SENTENCECTE     reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    CLOSECURL       reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    RETURN          reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    ENDSTMT         reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    CLOSEPAREN      reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)
    COMA            reduce using rule 52 (factor -> OPENPAREN expression CLOSEPAREN .)


state 91

    (20) assign -> ID EQUAL assignaux .

    READ            reduce using rule 20 (assign -> ID EQUAL assignaux .)
    WRITE           reduce using rule 20 (assign -> ID EQUAL assignaux .)
    ID              reduce using rule 20 (assign -> ID EQUAL assignaux .)
    IF              reduce using rule 20 (assign -> ID EQUAL assignaux .)
    WHILE           reduce using rule 20 (assign -> ID EQUAL assignaux .)
    DO              reduce using rule 20 (assign -> ID EQUAL assignaux .)
    NOT             reduce using rule 20 (assign -> ID EQUAL assignaux .)
    OPENPAREN       reduce using rule 20 (assign -> ID EQUAL assignaux .)
    BOOLCTE         reduce using rule 20 (assign -> ID EQUAL assignaux .)
    NUMBERCTE       reduce using rule 20 (assign -> ID EQUAL assignaux .)
    WORDCTE         reduce using rule 20 (assign -> ID EQUAL assignaux .)
    SENTENCECTE     reduce using rule 20 (assign -> ID EQUAL assignaux .)
    CLOSECURL       reduce using rule 20 (assign -> ID EQUAL assignaux .)
    RETURN          reduce using rule 20 (assign -> ID EQUAL assignaux .)
    ENDSTMT         reduce using rule 20 (assign -> ID EQUAL assignaux .)


state 92

    (22) assignaux -> exp . ENDSTMT

    ENDSTMT         shift and go to state 122


state 93

    (23) assignaux -> OPENCURL . assiaux CLOSECURL ENDSTMT
    (24) assiaux -> . exp
    (25) assiaux -> . exp COMA assiaux
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    assiaux                        shift and go to state 123
    exp                            shift and go to state 124
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 94

    (21) assign -> ID OPENBRAC cte . CLOSEBRAC EQUAL assignaux

    CLOSEBRAC       shift and go to state 125


state 95

    (67) specialfunction -> ID DOT special . OPENPAREN spaux CLOSEPAREN ENDSTMT

    OPENPAREN       shift and go to state 126


state 96

    (70) special -> LENGTH .

    OPENPAREN       reduce using rule 70 (special -> LENGTH .)


state 97

    (71) special -> FREQUENCY .

    OPENPAREN       reduce using rule 71 (special -> FREQUENCY .)


state 98

    (72) special -> SEARCH .

    OPENPAREN       reduce using rule 72 (special -> SEARCH .)


state 99

    (73) special -> EXISTS .

    OPENPAREN       reduce using rule 73 (special -> EXISTS .)


state 100

    (74) special -> MEAN .

    OPENPAREN       reduce using rule 74 (special -> MEAN .)


state 101

    (75) special -> MEDIAN .

    OPENPAREN       reduce using rule 75 (special -> MEDIAN .)


state 102

    (76) special -> MODE .

    OPENPAREN       reduce using rule 76 (special -> MODE .)


state 103

    (77) special -> WORDCOUNT .

    OPENPAREN       reduce using rule 77 (special -> WORDCOUNT .)


state 104

    (78) special -> TOKENIZE .

    OPENPAREN       reduce using rule 78 (special -> TOKENIZE .)


state 105

    (79) special -> REMOVE .

    OPENPAREN       reduce using rule 79 (special -> REMOVE .)


state 106

    (12) output -> WRITE OPENPAREN outputaux . CLOSEPAREN ENDSTMT

    CLOSEPAREN      shift and go to state 127


state 107

    (13) outputaux -> expression .
    (14) outputaux -> expression . COMA outputaux

    CLOSEPAREN      reduce using rule 13 (outputaux -> expression .)
    COMA            shift and go to state 128


state 108

    (41) expression -> relopexpression AND expression .

    READ            reduce using rule 41 (expression -> relopexpression AND expression .)
    WRITE           reduce using rule 41 (expression -> relopexpression AND expression .)
    ID              reduce using rule 41 (expression -> relopexpression AND expression .)
    IF              reduce using rule 41 (expression -> relopexpression AND expression .)
    WHILE           reduce using rule 41 (expression -> relopexpression AND expression .)
    DO              reduce using rule 41 (expression -> relopexpression AND expression .)
    NOT             reduce using rule 41 (expression -> relopexpression AND expression .)
    OPENPAREN       reduce using rule 41 (expression -> relopexpression AND expression .)
    BOOLCTE         reduce using rule 41 (expression -> relopexpression AND expression .)
    NUMBERCTE       reduce using rule 41 (expression -> relopexpression AND expression .)
    WORDCTE         reduce using rule 41 (expression -> relopexpression AND expression .)
    SENTENCECTE     reduce using rule 41 (expression -> relopexpression AND expression .)
    CLOSECURL       reduce using rule 41 (expression -> relopexpression AND expression .)
    RETURN          reduce using rule 41 (expression -> relopexpression AND expression .)
    ENDSTMT         reduce using rule 41 (expression -> relopexpression AND expression .)
    CLOSEPAREN      reduce using rule 41 (expression -> relopexpression AND expression .)
    COMA            reduce using rule 41 (expression -> relopexpression AND expression .)


state 109

    (42) expression -> relopexpression OR expression .

    READ            reduce using rule 42 (expression -> relopexpression OR expression .)
    WRITE           reduce using rule 42 (expression -> relopexpression OR expression .)
    ID              reduce using rule 42 (expression -> relopexpression OR expression .)
    IF              reduce using rule 42 (expression -> relopexpression OR expression .)
    WHILE           reduce using rule 42 (expression -> relopexpression OR expression .)
    DO              reduce using rule 42 (expression -> relopexpression OR expression .)
    NOT             reduce using rule 42 (expression -> relopexpression OR expression .)
    OPENPAREN       reduce using rule 42 (expression -> relopexpression OR expression .)
    BOOLCTE         reduce using rule 42 (expression -> relopexpression OR expression .)
    NUMBERCTE       reduce using rule 42 (expression -> relopexpression OR expression .)
    WORDCTE         reduce using rule 42 (expression -> relopexpression OR expression .)
    SENTENCECTE     reduce using rule 42 (expression -> relopexpression OR expression .)
    CLOSECURL       reduce using rule 42 (expression -> relopexpression OR expression .)
    RETURN          reduce using rule 42 (expression -> relopexpression OR expression .)
    ENDSTMT         reduce using rule 42 (expression -> relopexpression OR expression .)
    CLOSEPAREN      reduce using rule 42 (expression -> relopexpression OR expression .)
    COMA            reduce using rule 42 (expression -> relopexpression OR expression .)


state 110

    (54) condition -> IF OPENPAREN expression . CLOSEPAREN block
    (55) condition -> IF OPENPAREN expression . CLOSEPAREN block ELSE block

    CLOSEPAREN      shift and go to state 129


state 111

    (56) cycle -> WHILE OPENPAREN expression . CLOSEPAREN block

    CLOSEPAREN      shift and go to state 130


state 112

    (57) cycle -> DO block WHILE . OPENPAREN expression CLOSEPAREN ENDSTMT

    OPENPAREN       shift and go to state 131


state 113

    (44) relopexpression -> exp RELOP exp .

    AND             reduce using rule 44 (relopexpression -> exp RELOP exp .)
    OR              reduce using rule 44 (relopexpression -> exp RELOP exp .)
    READ            reduce using rule 44 (relopexpression -> exp RELOP exp .)
    WRITE           reduce using rule 44 (relopexpression -> exp RELOP exp .)
    ID              reduce using rule 44 (relopexpression -> exp RELOP exp .)
    IF              reduce using rule 44 (relopexpression -> exp RELOP exp .)
    WHILE           reduce using rule 44 (relopexpression -> exp RELOP exp .)
    DO              reduce using rule 44 (relopexpression -> exp RELOP exp .)
    NOT             reduce using rule 44 (relopexpression -> exp RELOP exp .)
    OPENPAREN       reduce using rule 44 (relopexpression -> exp RELOP exp .)
    BOOLCTE         reduce using rule 44 (relopexpression -> exp RELOP exp .)
    NUMBERCTE       reduce using rule 44 (relopexpression -> exp RELOP exp .)
    WORDCTE         reduce using rule 44 (relopexpression -> exp RELOP exp .)
    SENTENCECTE     reduce using rule 44 (relopexpression -> exp RELOP exp .)
    CLOSECURL       reduce using rule 44 (relopexpression -> exp RELOP exp .)
    RETURN          reduce using rule 44 (relopexpression -> exp RELOP exp .)
    ENDSTMT         reduce using rule 44 (relopexpression -> exp RELOP exp .)
    CLOSEPAREN      reduce using rule 44 (relopexpression -> exp RELOP exp .)
    COMA            reduce using rule 44 (relopexpression -> exp RELOP exp .)


state 114

    (47) exp -> term PLUS exp .

    RELOP           reduce using rule 47 (exp -> term PLUS exp .)
    AND             reduce using rule 47 (exp -> term PLUS exp .)
    OR              reduce using rule 47 (exp -> term PLUS exp .)
    READ            reduce using rule 47 (exp -> term PLUS exp .)
    WRITE           reduce using rule 47 (exp -> term PLUS exp .)
    ID              reduce using rule 47 (exp -> term PLUS exp .)
    IF              reduce using rule 47 (exp -> term PLUS exp .)
    WHILE           reduce using rule 47 (exp -> term PLUS exp .)
    DO              reduce using rule 47 (exp -> term PLUS exp .)
    NOT             reduce using rule 47 (exp -> term PLUS exp .)
    OPENPAREN       reduce using rule 47 (exp -> term PLUS exp .)
    BOOLCTE         reduce using rule 47 (exp -> term PLUS exp .)
    NUMBERCTE       reduce using rule 47 (exp -> term PLUS exp .)
    WORDCTE         reduce using rule 47 (exp -> term PLUS exp .)
    SENTENCECTE     reduce using rule 47 (exp -> term PLUS exp .)
    CLOSECURL       reduce using rule 47 (exp -> term PLUS exp .)
    RETURN          reduce using rule 47 (exp -> term PLUS exp .)
    ENDSTMT         reduce using rule 47 (exp -> term PLUS exp .)
    CLOSEPAREN      reduce using rule 47 (exp -> term PLUS exp .)
    COMA            reduce using rule 47 (exp -> term PLUS exp .)


state 115

    (48) exp -> term MINUS exp .

    RELOP           reduce using rule 48 (exp -> term MINUS exp .)
    AND             reduce using rule 48 (exp -> term MINUS exp .)
    OR              reduce using rule 48 (exp -> term MINUS exp .)
    READ            reduce using rule 48 (exp -> term MINUS exp .)
    WRITE           reduce using rule 48 (exp -> term MINUS exp .)
    ID              reduce using rule 48 (exp -> term MINUS exp .)
    IF              reduce using rule 48 (exp -> term MINUS exp .)
    WHILE           reduce using rule 48 (exp -> term MINUS exp .)
    DO              reduce using rule 48 (exp -> term MINUS exp .)
    NOT             reduce using rule 48 (exp -> term MINUS exp .)
    OPENPAREN       reduce using rule 48 (exp -> term MINUS exp .)
    BOOLCTE         reduce using rule 48 (exp -> term MINUS exp .)
    NUMBERCTE       reduce using rule 48 (exp -> term MINUS exp .)
    WORDCTE         reduce using rule 48 (exp -> term MINUS exp .)
    SENTENCECTE     reduce using rule 48 (exp -> term MINUS exp .)
    CLOSECURL       reduce using rule 48 (exp -> term MINUS exp .)
    RETURN          reduce using rule 48 (exp -> term MINUS exp .)
    ENDSTMT         reduce using rule 48 (exp -> term MINUS exp .)
    CLOSEPAREN      reduce using rule 48 (exp -> term MINUS exp .)
    COMA            reduce using rule 48 (exp -> term MINUS exp .)


state 116

    (50) term -> factor MULT term .

    PLUS            reduce using rule 50 (term -> factor MULT term .)
    MINUS           reduce using rule 50 (term -> factor MULT term .)
    RELOP           reduce using rule 50 (term -> factor MULT term .)
    AND             reduce using rule 50 (term -> factor MULT term .)
    OR              reduce using rule 50 (term -> factor MULT term .)
    READ            reduce using rule 50 (term -> factor MULT term .)
    WRITE           reduce using rule 50 (term -> factor MULT term .)
    ID              reduce using rule 50 (term -> factor MULT term .)
    IF              reduce using rule 50 (term -> factor MULT term .)
    WHILE           reduce using rule 50 (term -> factor MULT term .)
    DO              reduce using rule 50 (term -> factor MULT term .)
    NOT             reduce using rule 50 (term -> factor MULT term .)
    OPENPAREN       reduce using rule 50 (term -> factor MULT term .)
    BOOLCTE         reduce using rule 50 (term -> factor MULT term .)
    NUMBERCTE       reduce using rule 50 (term -> factor MULT term .)
    WORDCTE         reduce using rule 50 (term -> factor MULT term .)
    SENTENCECTE     reduce using rule 50 (term -> factor MULT term .)
    CLOSECURL       reduce using rule 50 (term -> factor MULT term .)
    RETURN          reduce using rule 50 (term -> factor MULT term .)
    ENDSTMT         reduce using rule 50 (term -> factor MULT term .)
    CLOSEPAREN      reduce using rule 50 (term -> factor MULT term .)
    COMA            reduce using rule 50 (term -> factor MULT term .)


state 117

    (51) term -> factor DIV term .

    PLUS            reduce using rule 51 (term -> factor DIV term .)
    MINUS           reduce using rule 51 (term -> factor DIV term .)
    RELOP           reduce using rule 51 (term -> factor DIV term .)
    AND             reduce using rule 51 (term -> factor DIV term .)
    OR              reduce using rule 51 (term -> factor DIV term .)
    READ            reduce using rule 51 (term -> factor DIV term .)
    WRITE           reduce using rule 51 (term -> factor DIV term .)
    ID              reduce using rule 51 (term -> factor DIV term .)
    IF              reduce using rule 51 (term -> factor DIV term .)
    WHILE           reduce using rule 51 (term -> factor DIV term .)
    DO              reduce using rule 51 (term -> factor DIV term .)
    NOT             reduce using rule 51 (term -> factor DIV term .)
    OPENPAREN       reduce using rule 51 (term -> factor DIV term .)
    BOOLCTE         reduce using rule 51 (term -> factor DIV term .)
    NUMBERCTE       reduce using rule 51 (term -> factor DIV term .)
    WORDCTE         reduce using rule 51 (term -> factor DIV term .)
    SENTENCECTE     reduce using rule 51 (term -> factor DIV term .)
    CLOSECURL       reduce using rule 51 (term -> factor DIV term .)
    RETURN          reduce using rule 51 (term -> factor DIV term .)
    ENDSTMT         reduce using rule 51 (term -> factor DIV term .)
    CLOSEPAREN      reduce using rule 51 (term -> factor DIV term .)
    COMA            reduce using rule 51 (term -> factor DIV term .)


state 118

    (17) decaux -> type ID OPENBRAC cte CLOSEBRAC . declareaux
    (18) declareaux -> . ENDSTMT
    (19) declareaux -> . COMA decaux

    ENDSTMT         shift and go to state 60
    COMA            shift and go to state 61

    declareaux                     shift and go to state 132

state 119

    (58) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN . OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN . OPENCURL blockaux returnaux ENDSTMT CLOSECURL

    OPENCURL        shift and go to state 133


state 120

    (62) parameteraux -> type ID .
    (63) parameteraux -> type ID . COMA parameteraux

    CLOSEPAREN      reduce using rule 62 (parameteraux -> type ID .)
    COMA            shift and go to state 134


state 121

    (11) input -> READ OPENPAREN ID CLOSEPAREN . ENDSTMT

    ENDSTMT         shift and go to state 135


state 122

    (22) assignaux -> exp ENDSTMT .

    READ            reduce using rule 22 (assignaux -> exp ENDSTMT .)
    WRITE           reduce using rule 22 (assignaux -> exp ENDSTMT .)
    ID              reduce using rule 22 (assignaux -> exp ENDSTMT .)
    IF              reduce using rule 22 (assignaux -> exp ENDSTMT .)
    WHILE           reduce using rule 22 (assignaux -> exp ENDSTMT .)
    DO              reduce using rule 22 (assignaux -> exp ENDSTMT .)
    NOT             reduce using rule 22 (assignaux -> exp ENDSTMT .)
    OPENPAREN       reduce using rule 22 (assignaux -> exp ENDSTMT .)
    BOOLCTE         reduce using rule 22 (assignaux -> exp ENDSTMT .)
    NUMBERCTE       reduce using rule 22 (assignaux -> exp ENDSTMT .)
    WORDCTE         reduce using rule 22 (assignaux -> exp ENDSTMT .)
    SENTENCECTE     reduce using rule 22 (assignaux -> exp ENDSTMT .)
    CLOSECURL       reduce using rule 22 (assignaux -> exp ENDSTMT .)
    RETURN          reduce using rule 22 (assignaux -> exp ENDSTMT .)
    ENDSTMT         reduce using rule 22 (assignaux -> exp ENDSTMT .)


state 123

    (23) assignaux -> OPENCURL assiaux . CLOSECURL ENDSTMT

    CLOSECURL       shift and go to state 136


state 124

    (24) assiaux -> exp .
    (25) assiaux -> exp . COMA assiaux

    CLOSECURL       reduce using rule 24 (assiaux -> exp .)
    COMA            shift and go to state 137


state 125

    (21) assign -> ID OPENBRAC cte CLOSEBRAC . EQUAL assignaux

    EQUAL           shift and go to state 138


state 126

    (67) specialfunction -> ID DOT special OPENPAREN . spaux CLOSEPAREN ENDSTMT
    (68) spaux -> . cte
    (69) spaux -> . empty
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE
    (80) empty -> .

    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57
    CLOSEPAREN      reduce using rule 80 (empty -> .)

    spaux                          shift and go to state 139
    cte                            shift and go to state 140
    empty                          shift and go to state 141

state 127

    (12) output -> WRITE OPENPAREN outputaux CLOSEPAREN . ENDSTMT

    ENDSTMT         shift and go to state 142


state 128

    (14) outputaux -> expression COMA . outputaux
    (13) outputaux -> . expression
    (14) outputaux -> . expression COMA outputaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    expression                     shift and go to state 107
    outputaux                      shift and go to state 143
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 129

    (54) condition -> IF OPENPAREN expression CLOSEPAREN . block
    (55) condition -> IF OPENPAREN expression CLOSEPAREN . block ELSE block
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 25

    block                          shift and go to state 144

state 130

    (56) cycle -> WHILE OPENPAREN expression CLOSEPAREN . block
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 25

    block                          shift and go to state 145

state 131

    (57) cycle -> DO block WHILE OPENPAREN . expression CLOSEPAREN ENDSTMT
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    expression                     shift and go to state 146
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 132

    (17) decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .

    FUNC            reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    BEGIN           reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    READ            reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    WRITE           reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    ID              reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    IF              reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    WHILE           reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    DO              reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    NOT             reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    OPENPAREN       reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    BOOLCTE         reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    NUMBERCTE       reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    WORDCTE         reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    SENTENCECTE     reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    RETURN          reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)
    ENDSTMT         reduce using rule 17 (decaux -> type ID OPENBRAC cte CLOSEBRAC declareaux .)


state 133

    (58) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL . declare blockaux returnaux ENDSTMT CLOSECURL
    (59) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL . blockaux returnaux ENDSTMT CLOSECURL
    (15) declare -> . DEC decaux
    (6) blockaux -> . action blockaux
    (7) blockaux -> . empty
    (8) action -> . input
    (9) action -> . output
    (10) action -> . statement
    (80) empty -> .
    (11) input -> . READ OPENPAREN ID CLOSEPAREN ENDSTMT
    (12) output -> . WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
    (35) statement -> . assign
    (36) statement -> . expression
    (37) statement -> . condition
    (38) statement -> . cycle
    (39) statement -> . specialfunction
    (20) assign -> . ID EQUAL assignaux
    (21) assign -> . ID OPENBRAC cte CLOSEBRAC EQUAL assignaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (54) condition -> . IF OPENPAREN expression CLOSEPAREN block
    (55) condition -> . IF OPENPAREN expression CLOSEPAREN block ELSE block
    (56) cycle -> . WHILE OPENPAREN expression CLOSEPAREN block
    (57) cycle -> . DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (67) specialfunction -> . ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    DEC             shift and go to state 7
    RETURN          reduce using rule 80 (empty -> .)
    ENDSTMT         reduce using rule 80 (empty -> .)
    READ            shift and go to state 36
    WRITE           shift and go to state 39
    ID              shift and go to state 38
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    DO              shift and go to state 49
    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    declare                        shift and go to state 147
    blockaux                       shift and go to state 148
    action                         shift and go to state 31
    empty                          shift and go to state 32
    input                          shift and go to state 33
    output                         shift and go to state 34
    statement                      shift and go to state 35
    assign                         shift and go to state 40
    expression                     shift and go to state 41
    condition                      shift and go to state 42
    cycle                          shift and go to state 43
    specialfunction                shift and go to state 44
    cte                            shift and go to state 45
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53

state 134

    (63) parameteraux -> type ID COMA . parameteraux
    (62) parameteraux -> . type ID
    (63) parameteraux -> . type ID COMA parameteraux
    (64) parameteraux -> . empty
    (31) type -> . BOOL
    (32) type -> . NUMBER
    (33) type -> . WORD
    (34) type -> . SENTENCE
    (80) empty -> .

    BOOL            shift and go to state 15
    NUMBER          shift and go to state 16
    WORD            shift and go to state 17
    SENTENCE        shift and go to state 18
    CLOSEPAREN      reduce using rule 80 (empty -> .)

    type                           shift and go to state 87
    parameteraux                   shift and go to state 149
    empty                          shift and go to state 88

state 135

    (11) input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .

    READ            reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    WRITE           reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    ID              reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    IF              reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    WHILE           reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    DO              reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    NOT             reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    OPENPAREN       reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    BOOLCTE         reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    NUMBERCTE       reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    WORDCTE         reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    SENTENCECTE     reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    CLOSECURL       reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    RETURN          reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)
    ENDSTMT         reduce using rule 11 (input -> READ OPENPAREN ID CLOSEPAREN ENDSTMT .)


state 136

    (23) assignaux -> OPENCURL assiaux CLOSECURL . ENDSTMT

    ENDSTMT         shift and go to state 150


state 137

    (25) assiaux -> exp COMA . assiaux
    (24) assiaux -> . exp
    (25) assiaux -> . exp COMA assiaux
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    exp                            shift and go to state 124
    assiaux                        shift and go to state 151
    term                           shift and go to state 52
    factor                         shift and go to state 53
    cte                            shift and go to state 45

state 138

    (21) assign -> ID OPENBRAC cte CLOSEBRAC EQUAL . assignaux
    (22) assignaux -> . exp ENDSTMT
    (23) assignaux -> . OPENCURL assiaux CLOSECURL ENDSTMT
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    OPENCURL        shift and go to state 93
    OPENPAREN       shift and go to state 37
    ID              shift and go to state 68
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    cte                            shift and go to state 45
    assignaux                      shift and go to state 152
    exp                            shift and go to state 92
    term                           shift and go to state 52
    factor                         shift and go to state 53

state 139

    (67) specialfunction -> ID DOT special OPENPAREN spaux . CLOSEPAREN ENDSTMT

    CLOSEPAREN      shift and go to state 153


state 140

    (68) spaux -> cte .

    CLOSEPAREN      reduce using rule 68 (spaux -> cte .)


state 141

    (69) spaux -> empty .

    CLOSEPAREN      reduce using rule 69 (spaux -> empty .)


state 142

    (12) output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .

    READ            reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    WRITE           reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    ID              reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    IF              reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    WHILE           reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    DO              reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    NOT             reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    OPENPAREN       reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    BOOLCTE         reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    NUMBERCTE       reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    WORDCTE         reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    SENTENCECTE     reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    CLOSECURL       reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    RETURN          reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)
    ENDSTMT         reduce using rule 12 (output -> WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT .)


state 143

    (14) outputaux -> expression COMA outputaux .

    CLOSEPAREN      reduce using rule 14 (outputaux -> expression COMA outputaux .)


state 144

    (54) condition -> IF OPENPAREN expression CLOSEPAREN block .
    (55) condition -> IF OPENPAREN expression CLOSEPAREN block . ELSE block

    READ            reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    WRITE           reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    ID              reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    IF              reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    WHILE           reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    DO              reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    NOT             reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    OPENPAREN       reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    BOOLCTE         reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    NUMBERCTE       reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    WORDCTE         reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    SENTENCECTE     reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    CLOSECURL       reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    RETURN          reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    ENDSTMT         reduce using rule 54 (condition -> IF OPENPAREN expression CLOSEPAREN block .)
    ELSE            shift and go to state 154


state 145

    (56) cycle -> WHILE OPENPAREN expression CLOSEPAREN block .

    READ            reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    WRITE           reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    ID              reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    IF              reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    WHILE           reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    DO              reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    NOT             reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    OPENPAREN       reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    BOOLCTE         reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    NUMBERCTE       reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    WORDCTE         reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    SENTENCECTE     reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    CLOSECURL       reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    RETURN          reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)
    ENDSTMT         reduce using rule 56 (cycle -> WHILE OPENPAREN expression CLOSEPAREN block .)


state 146

    (57) cycle -> DO block WHILE OPENPAREN expression . CLOSEPAREN ENDSTMT

    CLOSEPAREN      shift and go to state 155


state 147

    (58) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare . blockaux returnaux ENDSTMT CLOSECURL
    (6) blockaux -> . action blockaux
    (7) blockaux -> . empty
    (8) action -> . input
    (9) action -> . output
    (10) action -> . statement
    (80) empty -> .
    (11) input -> . READ OPENPAREN ID CLOSEPAREN ENDSTMT
    (12) output -> . WRITE OPENPAREN outputaux CLOSEPAREN ENDSTMT
    (35) statement -> . assign
    (36) statement -> . expression
    (37) statement -> . condition
    (38) statement -> . cycle
    (39) statement -> . specialfunction
    (20) assign -> . ID EQUAL assignaux
    (21) assign -> . ID OPENBRAC cte CLOSEBRAC EQUAL assignaux
    (40) expression -> . relopexpression
    (41) expression -> . relopexpression AND expression
    (42) expression -> . relopexpression OR expression
    (54) condition -> . IF OPENPAREN expression CLOSEPAREN block
    (55) condition -> . IF OPENPAREN expression CLOSEPAREN block ELSE block
    (56) cycle -> . WHILE OPENPAREN expression CLOSEPAREN block
    (57) cycle -> . DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT
    (67) specialfunction -> . ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT
    (43) relopexpression -> . exp
    (44) relopexpression -> . exp RELOP exp
    (45) relopexpression -> . NOT exp
    (46) exp -> . term
    (47) exp -> . term PLUS exp
    (48) exp -> . term MINUS exp
    (49) term -> . factor
    (50) term -> . factor MULT term
    (51) term -> . factor DIV term
    (52) factor -> . OPENPAREN expression CLOSEPAREN
    (53) factor -> . cte
    (26) cte -> . ID
    (27) cte -> . BOOLCTE
    (28) cte -> . NUMBERCTE
    (29) cte -> . WORDCTE
    (30) cte -> . SENTENCECTE

    RETURN          reduce using rule 80 (empty -> .)
    ENDSTMT         reduce using rule 80 (empty -> .)
    READ            shift and go to state 36
    WRITE           shift and go to state 39
    ID              shift and go to state 38
    IF              shift and go to state 47
    WHILE           shift and go to state 48
    DO              shift and go to state 49
    NOT             shift and go to state 51
    OPENPAREN       shift and go to state 37
    BOOLCTE         shift and go to state 54
    NUMBERCTE       shift and go to state 55
    WORDCTE         shift and go to state 56
    SENTENCECTE     shift and go to state 57

    blockaux                       shift and go to state 156
    action                         shift and go to state 31
    empty                          shift and go to state 32
    input                          shift and go to state 33
    output                         shift and go to state 34
    statement                      shift and go to state 35
    assign                         shift and go to state 40
    expression                     shift and go to state 41
    condition                      shift and go to state 42
    cycle                          shift and go to state 43
    specialfunction                shift and go to state 44
    cte                            shift and go to state 45
    relopexpression                shift and go to state 46
    exp                            shift and go to state 50
    term                           shift and go to state 52
    factor                         shift and go to state 53

state 148

    (59) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux . returnaux ENDSTMT CLOSECURL
    (65) returnaux -> . RETURN ID
    (66) returnaux -> . empty
    (80) empty -> .

    RETURN          shift and go to state 158
    ENDSTMT         reduce using rule 80 (empty -> .)

    returnaux                      shift and go to state 157
    empty                          shift and go to state 159

state 149

    (63) parameteraux -> type ID COMA parameteraux .

    CLOSEPAREN      reduce using rule 63 (parameteraux -> type ID COMA parameteraux .)


state 150

    (23) assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .

    READ            reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    WRITE           reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    ID              reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    IF              reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    WHILE           reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    DO              reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    NOT             reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    OPENPAREN       reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    BOOLCTE         reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    NUMBERCTE       reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    WORDCTE         reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    SENTENCECTE     reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    CLOSECURL       reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    RETURN          reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)
    ENDSTMT         reduce using rule 23 (assignaux -> OPENCURL assiaux CLOSECURL ENDSTMT .)


state 151

    (25) assiaux -> exp COMA assiaux .

    CLOSECURL       reduce using rule 25 (assiaux -> exp COMA assiaux .)


state 152

    (21) assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .

    READ            reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    WRITE           reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    ID              reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    IF              reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    WHILE           reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    DO              reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    NOT             reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    OPENPAREN       reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    BOOLCTE         reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    NUMBERCTE       reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    WORDCTE         reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    SENTENCECTE     reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    CLOSECURL       reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    RETURN          reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)
    ENDSTMT         reduce using rule 21 (assign -> ID OPENBRAC cte CLOSEBRAC EQUAL assignaux .)


state 153

    (67) specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN . ENDSTMT

    ENDSTMT         shift and go to state 160


state 154

    (55) condition -> IF OPENPAREN expression CLOSEPAREN block ELSE . block
    (5) block -> . OPENCURL blockaux CLOSECURL

    OPENCURL        shift and go to state 25

    block                          shift and go to state 161

state 155

    (57) cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN . ENDSTMT

    ENDSTMT         shift and go to state 162


state 156

    (58) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux . returnaux ENDSTMT CLOSECURL
    (65) returnaux -> . RETURN ID
    (66) returnaux -> . empty
    (80) empty -> .

    RETURN          shift and go to state 158
    ENDSTMT         reduce using rule 80 (empty -> .)

    returnaux                      shift and go to state 163
    empty                          shift and go to state 159

state 157

    (59) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux . ENDSTMT CLOSECURL

    ENDSTMT         shift and go to state 164


state 158

    (65) returnaux -> RETURN . ID

    ID              shift and go to state 165


state 159

    (66) returnaux -> empty .

    ENDSTMT         reduce using rule 66 (returnaux -> empty .)


state 160

    (67) specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .

    READ            reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    WRITE           reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    ID              reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    IF              reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    WHILE           reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    DO              reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    NOT             reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    OPENPAREN       reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    BOOLCTE         reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    NUMBERCTE       reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    WORDCTE         reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    SENTENCECTE     reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    CLOSECURL       reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    RETURN          reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)
    ENDSTMT         reduce using rule 67 (specialfunction -> ID DOT special OPENPAREN spaux CLOSEPAREN ENDSTMT .)


state 161

    (55) condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .

    READ            reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    WRITE           reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    ID              reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    IF              reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    WHILE           reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    DO              reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    NOT             reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    OPENPAREN       reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    BOOLCTE         reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    NUMBERCTE       reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    WORDCTE         reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    SENTENCECTE     reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    CLOSECURL       reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    RETURN          reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)
    ENDSTMT         reduce using rule 55 (condition -> IF OPENPAREN expression CLOSEPAREN block ELSE block .)


state 162

    (57) cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .

    READ            reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    WRITE           reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    ID              reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    IF              reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    WHILE           reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    DO              reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    NOT             reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    OPENPAREN       reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    BOOLCTE         reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    NUMBERCTE       reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    WORDCTE         reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    SENTENCECTE     reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    CLOSECURL       reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    RETURN          reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)
    ENDSTMT         reduce using rule 57 (cycle -> DO block WHILE OPENPAREN expression CLOSEPAREN ENDSTMT .)


state 163

    (58) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux . ENDSTMT CLOSECURL

    ENDSTMT         shift and go to state 166


state 164

    (59) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT . CLOSECURL

    CLOSECURL       shift and go to state 167


state 165

    (65) returnaux -> RETURN ID .

    ENDSTMT         reduce using rule 65 (returnaux -> RETURN ID .)


state 166

    (58) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT . CLOSECURL

    CLOSECURL       shift and go to state 168


state 167

    (59) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL .

    FUNC            reduce using rule 59 (function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL .)
    BEGIN           reduce using rule 59 (function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL blockaux returnaux ENDSTMT CLOSECURL .)


state 168

    (58) function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL .

    FUNC            reduce using rule 58 (function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL .)
    BEGIN           reduce using rule 58 (function -> FUNC funcaux ID OPENPAREN parameteraux CLOSEPAREN OPENCURL declare blockaux returnaux ENDSTMT CLOSECURL .)

